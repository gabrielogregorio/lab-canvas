{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,IGQQ,EACA,EACA,EACA,EACA,E,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,W,I,E,A,G,E,GFVR,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,0G,I,E,C,EGA5F,EAAiB,IAAA,IAAoB,+CAAA,YAAA,GAAA,EAAgD,QAAQ,EDC7F,sEAAqE;AAErE,IAAA,EAAA,WAAA,EAAA,WAWE,SAAA,IAAA,I,EAAA,EAAA,IAAA,AACE,CAAA,IAAI,CAAC,OAAO,CAAG,SAAS,cAAc,CAAC,UACvC,IAAI,CAAC,GAAG,CAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAEnC,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,KAAK,CAAG,IACb,IAAI,CAAC,MAAM,CAAG,IAEd,IAAI,CAAC,QAAQ,CAAG,IAAI,MAEpB,IAAI,CAAC,QAAQ,CAAC,GAAG,C,C,EAAG,I,E,U,C,E,O,C,EAEpB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,WACrB,EAAK,gBAAgB,CAAG,CAAA,CAC1B,CACF,CAqBF,OAnBE,EAAA,SAAA,CAAA,MAAM,CAAN,WACE,GAAK,IAAI,CAAC,gBAAgB,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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-faab17e132b5d02e.js","src/radar/index.ts","src/radar/Canvas.ts","node_modules/@parcel/runtime-js/lib/runtime-d05f028b4cc8db96.js","src/radar/KeyBoardHandler.ts","src/radar/Obstacle.ts","src/radar/Performance.ts","src/radar/Radar.ts","src/radar/Pulse.ts","src/radar/dopplerUtils.ts","src/radar/utils.ts","src/radar/RadarScreen.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiree935\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiree935\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $fc376d9b72831d21$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"3tlcY\",\"radar.2e820736.js\",\"aWJnt\",\"example_of_map.27c12f3d.png\"]'));\n\nvar $67f1d78c56d14db7$exports = {};\n$67f1d78c56d14db7$exports = new URL(\"example_of_map.27c12f3d.png\", import.meta.url).toString();\n\n\n// IMAGE FROM https://github.com/le-chartreux/pyprocgen IN 10/18/2023\nvar $9f98d63698d0509d$export$8d01c972ee8b14a9 = /** @class */ function() {\n    function Canvas() {\n        var _this = this;\n        this.element = document.getElementById(\"canvas\");\n        this.ctx = this.element.getContext(\"2d\");\n        this.x = 0;\n        this.y = 0;\n        this.width = 1000;\n        this.height = 500;\n        this.imageMap = new Image();\n        this.imageMap.src = (0, (/*@__PURE__*/$parcel$interopDefault($67f1d78c56d14db7$exports)));\n        this.imageMap.onload = function() {\n            _this.imageMapIsLoaded = true;\n        };\n    }\n    Canvas.prototype.render = function() {\n        if (!this.imageMapIsLoaded) return;\n        this.ctx.beginPath();\n        var pattern1Image = this.ctx.createPattern(this.imageMap, \"repeat\");\n        var widthRect = 2339;\n        var height = 1370;\n        var widthImage = this.imageMap.width;\n        var svgMatrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n        pattern1Image.setTransform(svgMatrix.scale(widthRect / widthImage));\n        this.ctx.fillStyle = pattern1Image;\n        this.ctx.fillRect(0, 0, widthRect, height);\n        this.ctx.closePath();\n    };\n    return Canvas;\n}();\n\n\nvar $d40ce4e9287541d9$export$6a77e7ef76b918fb = /** @class */ function() {\n    function KeyBoardHandler() {\n        var _this = this;\n        this.keyboardState = {\n            top: false,\n            left: false,\n            bottom: false,\n            right: false,\n            KeyQ: false,\n            KeyE: false\n        };\n        var moves = {\n            KeyW: function(newValue) {\n                _this.keyboardState.top = newValue;\n            },\n            KeyS: function(newValue) {\n                _this.keyboardState.bottom = newValue;\n            },\n            KeyA: function(newValue) {\n                _this.keyboardState.left = newValue;\n            },\n            KeyD: function(newValue) {\n                _this.keyboardState.right = newValue;\n            },\n            KeyQ: function(newValue) {\n                _this.keyboardState.KeyQ = newValue;\n            },\n            KeyE: function(newValue) {\n                _this.keyboardState.KeyE = newValue;\n            }\n        };\n        window.addEventListener(\"keydown\", function(event) {\n            var _a;\n            (_a = moves[event.code]) === null || _a === void 0 || _a.call(moves, true);\n        });\n        window.addEventListener(\"keyup\", function(event) {\n            var _a;\n            (_a = moves[event.code]) === null || _a === void 0 || _a.call(moves, false);\n        });\n    }\n    return KeyBoardHandler;\n}();\n\n\nvar $5b139ef7702c9fb6$export$83b45c7b75260f83 = /** @class */ function() {\n    function Obstacle(canvas, keyboardHandler) {\n        this.keyboard = keyboardHandler;\n        this.canvas = canvas;\n        this.x = 300;\n        this.y = 200;\n        this.width = 5;\n        this.height = 5;\n        this.xVelocity = 0;\n        this.yVelocity = 0;\n    }\n    Obstacle.prototype.render = function() {\n        if (this.keyboard.keyboardState.top) this.yVelocity -= 0.2;\n        if (this.keyboard.keyboardState.bottom) this.yVelocity += 0.2;\n        if (this.keyboard.keyboardState.left) this.xVelocity -= 0.2;\n        if (this.keyboard.keyboardState.right) this.xVelocity += 0.2;\n        this.x += this.xVelocity;\n        this.y += this.yVelocity;\n        if (this.keyboard.keyboardState.KeyQ) {\n            this.width -= 5;\n            this.height -= 5;\n        }\n        if (this.keyboard.keyboardState.KeyE) {\n            this.width += 5;\n            this.height += 5;\n        }\n        this.canvas.ctx.beginPath();\n        this.canvas.ctx.fillStyle = \"#ffde3c\";\n        this.canvas.ctx.font = \"16px Arial\";\n        this.canvas.ctx.textAlign = \"center\";\n        this.canvas.ctx.fillText(\"X=\".concat(Math.floor(this.x), \" Y=\").concat(Math.floor(this.y), \" VX=\").concat(Number(this.xVelocity.toFixed(1)), \" VY=\").concat(Number(this.yVelocity.toFixed(1))), this.x, this.y - 10);\n        this.canvas.ctx.fillStyle = \"#ffff22\";\n        this.canvas.ctx.fillRect(this.x, this.y, this.width, this.height);\n        this.canvas.ctx.closePath();\n    };\n    return Obstacle;\n}();\n\n\nvar $6a873260438f2416$var$targetFrames = 60;\nvar $6a873260438f2416$export$7e252627609de684 = /** @class */ function() {\n    function Performance() {}\n    Performance.prototype.render = function(callback) {\n        var lastTime = performance.now();\n        var frameDuration = 1000 / $6a873260438f2416$var$targetFrames;\n        var bootstrap = function(currentTime) {\n            var deltaTime = currentTime - lastTime;\n            if (deltaTime >= frameDuration) {\n                callback();\n                lastTime = currentTime;\n            }\n            requestAnimationFrame(bootstrap);\n        };\n        requestAnimationFrame(bootstrap);\n    };\n    return Performance;\n}();\n\n\nvar $f4a2aea617e9cf33$exports = {};\n\n$parcel$export($f4a2aea617e9cf33$exports, \"Radar\", () => $f4a2aea617e9cf33$export$bace472c466fdd25);\nvar $11e7ceeebb94ef48$export$927d63e2511364c0 = /** @class */ function() {\n    function Pulse(canvas, angle, speed, x, y, frequency) {\n        this.canvas = canvas;\n        this.isInInitialDirection = true;\n        this.publicFrequency = frequency;\n        this.isActive = true;\n        this.x = x;\n        this.y = y;\n        this.velocityX = Math.cos(angle) * speed;\n        this.velocityY = Math.sin(angle) * speed;\n        this.maxLifeInRender = 500;\n        this.lifeRender = 0;\n        this.sizeWidth = 2;\n        this.sizeHeight = 2;\n    }\n    Pulse.prototype.deactivate = function() {\n        this.isActive = false;\n    };\n    Pulse.prototype.returnDirection = function() {\n        this.velocityX = this.velocityX * -1;\n        this.velocityY = this.velocityY * -1;\n        this.isInInitialDirection = false;\n    };\n    Pulse.prototype.render = function() {\n        if (!this.isActive) return;\n        this.x += this.velocityX;\n        this.y += this.velocityY;\n        if (this.isInInitialDirection) {\n            this.sizeWidth += 1;\n            this.sizeHeight += 1;\n        } else if (this.sizeWidth >= 0) {\n            this.sizeWidth -= 1;\n            this.sizeHeight -= 1;\n        } else this.deactivate();\n        this.canvas.ctx.beginPath();\n        this.canvas.ctx.fillStyle = \"#ffffff\";\n        this.canvas.ctx.fillRect(this.x, this.y, this.sizeWidth, this.sizeHeight);\n        this.canvas.ctx.closePath();\n        this.lifeRender += 1;\n        if (this.lifeRender >= this.maxLifeInRender) this.deactivate();\n    };\n    return Pulse;\n}();\n\n\n// DOPPLER\n// f' = f * (v + k)\n//          (v + x)\n//\n// k = radar = 0\n// f' = f *   v\n//          (v + x)\n//\n// MULTIPLY BY (v + x)\n//\n// f' * (v+x) = f * v\n//\n// f'v + f'x = f * v\n//\n// f'x = (f * v) - f'v\n//\n//f' = f + fΔ\n//\n// (f+fΔ)x = fv - (f + fΔ)v\n//\n// (f+fΔ)x = fv - fv + fΔv\n//\n// (f+fΔ)x = fΔv\n//\n// x =  fΔv\n//     (f+fΔ)\n//\n// frequencyChange = fΔ = f' - f\n// x =  (frequencyChange *  speedWave) / (baseFrequency + frequencyChange)\n//\nvar $0d77b57ffac5c975$export$539f0399746e9c38 = function(observedFrequency, baseFrequency, speedWave) {\n    var frequencyChange = observedFrequency - baseFrequency;\n    var velocity = frequencyChange * speedWave / (baseFrequency + frequencyChange);\n    return velocity;\n};\nvar $0d77b57ffac5c975$export$3bc99aa47f0f12de = function(targetVelocity, baseFrequency, speedWave) {\n    return baseFrequency * (speedWave / (speedWave + targetVelocity));\n};\nvar $0d77b57ffac5c975$export$7f8704557ed79bfe = function(radarPosition, objectPosition, objectVelocity) {\n    var directionalVectorX = objectPosition.x - radarPosition.x;\n    var directionVectorY = objectPosition.y - radarPosition.y;\n    var magnitude = Math.sqrt(Math.pow(directionalVectorX, 2) + Math.pow(directionVectorY, 2));\n    var normalizedDirectionalVectorX = directionalVectorX / magnitude;\n    var normalizedDirectionVectorY = directionVectorY / magnitude;\n    return objectVelocity.x * normalizedDirectionalVectorX + objectVelocity.y * normalizedDirectionVectorY;\n};\n\n\nvar $3cedec3cade137c3$export$5efe44c485c74673 = function(box1, box2) {\n    var box2NotCollideRight = box2.x > box1.x + box1.width;\n    var box1NotColliedRight = box1.x > box2.x + box2.width;\n    var box2NotColliedBottom = box2.y > box1.y + box1.height;\n    var box1NotColliedBottom = box1.y > box2.y + box2.height;\n    return !(box2NotCollideRight || box1NotColliedRight || box2NotColliedBottom || box1NotColliedBottom);\n};\nvar $3cedec3cade137c3$var$degreesToRadians = function(degrees) {\n    return degrees * (Math.PI / 180);\n};\nvar $3cedec3cade137c3$export$a27d9ba13cc47e16 = function(radarOriginX, radarOriginY, distanceFromRadarHypotenuse, angleInDegrees) {\n    var angleInRadians = $3cedec3cade137c3$var$degreesToRadians(angleInDegrees);\n    var adjacentLeg = distanceFromRadarHypotenuse * Math.cos(angleInRadians);\n    var oppositeLeg = distanceFromRadarHypotenuse * Math.sin(angleInRadians);\n    var targetX = radarOriginX + adjacentLeg;\n    var targetY = radarOriginY + oppositeLeg;\n    return {\n        targetX: targetX,\n        targetY: targetY\n    };\n};\nfunction $3cedec3cade137c3$export$9c1f5b14894daf96(value) {\n    return Math.round(value / 1000) * 1000;\n}\n\n\nvar $f4a2aea617e9cf33$var$__assign = undefined && undefined.__assign || function() {\n    $f4a2aea617e9cf33$var$__assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $f4a2aea617e9cf33$var$__assign.apply(this, arguments);\n};\nvar $f4a2aea617e9cf33$var$maxNumberToExcedsHex = 100000;\nvar $f4a2aea617e9cf33$var$max2Frequencty = 10000000;\nvar $f4a2aea617e9cf33$export$bace472c466fdd25 = /** @class */ function() {\n    function Radar(canvas, obstacle) {\n        this.pulses = [];\n        this.obstacle = obstacle;\n        this.canvas = canvas;\n        this.angle0360 = 0;\n        this.angle0360V2 = 180;\n        this.xSendPulses = 100;\n        this.ySendPulses = 300;\n        this.width = 20;\n        this.height = 20;\n        this.frequency = 0;\n        this.frequency2 = $f4a2aea617e9cf33$var$maxNumberToExcedsHex;\n        this.frequencyGapToDoppler = 1000;\n        this.frequencySendList = {};\n    }\n    Radar.prototype.detectReport = function() {\n        var _this = this;\n        this.pulses.forEach(function(pulse) {\n            if (pulse.isActive && !pulse.isInInitialDirection && (0, $3cedec3cade137c3$export$5efe44c485c74673)({\n                x: pulse.x,\n                y: pulse.y,\n                width: pulse.sizeWidth,\n                height: pulse.sizeHeight\n            }, {\n                x: _this.xSendPulses,\n                y: _this.ySendPulses,\n                width: _this.width,\n                height: _this.height\n            })) {\n                var probablyRealFrequency = (0, $3cedec3cade137c3$export$9c1f5b14894daf96)(pulse.publicFrequency);\n                _this.frequencySendList[probablyRealFrequency] = $f4a2aea617e9cf33$var$__assign($f4a2aea617e9cf33$var$__assign({}, _this.frequencySendList[probablyRealFrequency]), {\n                    timeRecievid: new Date().getTime(),\n                    frequencyRecieved: pulse.publicFrequency\n                });\n                pulse.deactivate();\n            }\n        });\n    };\n    Radar.prototype.mapObjects = function() {\n        var _this = this;\n        var returnItems = [];\n        var keys = Object.keys(this.frequencySendList);\n        keys.forEach(function(key) {\n            if (_this.frequencySendList[key].timeRecievid) {\n                var deltaTime = _this.frequencySendList[key].timeRecievid - _this.frequencySendList[key].timeStart;\n                var estimatedDistance = deltaTime * 800 / 2817;\n                var data = (0, $3cedec3cade137c3$export$a27d9ba13cc47e16)(_this.xSendPulses, _this.ySendPulses, estimatedDistance, _this.frequencySendList[key].angle0360);\n                var RadialVelocityTarget = (0, $0d77b57ffac5c975$export$539f0399746e9c38)(_this.frequencySendList[key].frequencyRecieved, Number(key), 12345);\n                returnItems.push($f4a2aea617e9cf33$var$__assign($f4a2aea617e9cf33$var$__assign({}, data), {\n                    timeRecieved: _this.frequencySendList[key].timeRecievid,\n                    RadialVelocityTarget: RadialVelocityTarget\n                }));\n            }\n        });\n        return returnItems;\n    };\n    Radar.prototype.deactivatePulse = function(pulse) {\n        pulse.deactivate();\n    };\n    Radar.prototype.cleanup = function() {\n        this.pulses = this.pulses.filter(function(pulse) {\n            return pulse.isActive;\n        });\n    };\n    Radar.prototype.renderPulses = function() {\n        var _this = this;\n        this.pulses.forEach(function(pulse) {\n            pulse.render();\n            if (pulse.isInInitialDirection && (0, $3cedec3cade137c3$export$5efe44c485c74673)({\n                x: pulse.x,\n                y: pulse.y,\n                width: pulse.sizeWidth,\n                height: pulse.sizeHeight\n            }, _this.obstacle)) {\n                pulse.returnDirection();\n                var radialVelocity = (0, $0d77b57ffac5c975$export$7f8704557ed79bfe)({\n                    x: _this.xSendPulses,\n                    y: _this.ySendPulses\n                }, {\n                    x: _this.obstacle.x,\n                    y: _this.obstacle.y\n                }, {\n                    x: _this.obstacle.xVelocity,\n                    y: _this.obstacle.yVelocity\n                });\n                _this.obstacle.xVelocity, _this.obstacle.xVelocity, _this.obstacle.yVelocity, _this.obstacle.yVelocity;\n                pulse.publicFrequency = (0, $0d77b57ffac5c975$export$3bc99aa47f0f12de)(radialVelocity, pulse.publicFrequency, 12345);\n            }\n        });\n    };\n    Radar.prototype.render = function() {\n        // this.canvas.ctx.beginPath();\n        // this.canvas.ctx.fillStyle = \"#222222\";\n        // this.canvas.ctx.fillRect(this.xSendPulses, this.ySendPulses, this.width, this.height);\n        // this.canvas.ctx.closePath();\n        this.frequency += this.frequencyGapToDoppler;\n        this.frequency2 += this.frequencyGapToDoppler;\n        if (this.frequency > $f4a2aea617e9cf33$var$maxNumberToExcedsHex) this.frequency = 0;\n        if (this.frequency2 > $f4a2aea617e9cf33$var$max2Frequencty) this.frequency2 = $f4a2aea617e9cf33$var$maxNumberToExcedsHex + this.frequencyGapToDoppler;\n        this.angle0360 += 3;\n        if (this.angle0360 >= 360) this.angle0360 = 0;\n        this.angle0360V2 += 3;\n        if (this.angle0360V2 >= 360) this.angle0360V2 = 0;\n        var angleInRadians = this.angle0360 * (Math.PI / 180);\n        var pulseSpeed = 20;\n        this.frequencySendList[this.frequency] = {\n            timeStart: new Date().getTime(),\n            angle0360: this.angle0360,\n            xStart: this.xSendPulses,\n            yStart: this.ySendPulses,\n            timeRecievid: undefined,\n            frequencyRecieved: undefined\n        };\n        this.pulses.push(new (0, $11e7ceeebb94ef48$export$927d63e2511364c0)(this.canvas, angleInRadians, pulseSpeed, this.xSendPulses, this.ySendPulses, this.frequency));\n        //\n        var angleInRadiansV2 = this.angle0360V2 * (Math.PI / 180);\n        var pulseSpeedV2 = 15;\n        this.frequencySendList[this.frequency2] = {\n            timeStart: new Date().getTime(),\n            angle0360: this.angle0360V2,\n            xStart: this.xSendPulses,\n            yStart: this.ySendPulses,\n            timeRecievid: undefined,\n            frequencyRecieved: undefined\n        };\n        this.pulses.push(new (0, $11e7ceeebb94ef48$export$927d63e2511364c0)(this.canvas, angleInRadiansV2, pulseSpeedV2, this.xSendPulses, this.ySendPulses, this.frequency2));\n        this.renderPulses();\n        this.cleanup();\n        this.detectReport();\n    };\n    return Radar;\n}();\n\n\n\nvar $424303fe1d5ebf82$export$8b99deabfaab0abf = /** @class */ function() {\n    function RadarScreen(radar) {\n        this.radar = radar;\n        this.element = document.getElementById(\"canvas2\");\n        this.ctx = this.element.getContext(\"2d\");\n        this.x = 0;\n        this.y = 0;\n        this.width = 1000;\n        this.height = 500;\n    }\n    RadarScreen.prototype.render = function() {\n        var _this = this;\n        var detections = this.radar.mapObjects();\n        this.ctx.clearRect(0, 0, 500, 500);\n        this.ctx.arc(250, 250, 250, 0, 2 * Math.PI);\n        this.ctx.strokeStyle = \"#44de3c\";\n        this.ctx.stroke();\n        var lastDetection = {\n            x: 0,\n            y: 0\n        };\n        detections.forEach(function(item) {\n            if (new Date().getTime() - item.timeReceived <= 2000) {\n                _this.ctx.beginPath();\n                if (!(0, $3cedec3cade137c3$export$5efe44c485c74673)({\n                    x: item.targetX / 3,\n                    y: item.targetY / 3,\n                    width: 30,\n                    height: 30\n                }, {\n                    x: lastDetection.x,\n                    y: lastDetection.y,\n                    width: 30,\n                    height: 30\n                })) {\n                    _this.ctx.fillStyle = \"#44de3c\";\n                    _this.ctx.font = \"16px Arial\";\n                    _this.ctx.textAlign = \"center\";\n                    _this.ctx.fillText(\"X=\".concat(Math.floor(item.targetX), \" Y=\").concat(Math.floor(item.targetY), \" RV=\").concat(Number(item.RadialSpeedTarget.toFixed(2))), Math.floor(item.targetX / 3), Math.floor(item.targetY / 3) - 10);\n                    lastDetection = {\n                        x: item.targetX / 3,\n                        y: item.targetY / 3\n                    };\n                }\n                _this.ctx.fillStyle = \"#44de3c\";\n                _this.ctx.fillRect(item.targetX / 3, item.targetY / 3, 10, 10);\n                _this.ctx.closePath();\n            }\n        });\n    };\n    return RadarScreen;\n}();\n\n\n(function() {\n    var mainCanvas = new (0, $9f98d63698d0509d$export$8d01c972ee8b14a9)();\n    var keyboard = new (0, $d40ce4e9287541d9$export$6a77e7ef76b918fb)();\n    var obstacle = new (0, $5b139ef7702c9fb6$export$83b45c7b75260f83)(mainCanvas, keyboard);\n    var radar = new (0, $f4a2aea617e9cf33$exports.Radar)(mainCanvas, obstacle);\n    var RadarCanvas = new (0, $424303fe1d5ebf82$export$8b99deabfaab0abf)(radar);\n    new (0, $6a873260438f2416$export$7e252627609de684)().render(function() {\n        mainCanvas.ctx.clearRect(mainCanvas.x, mainCanvas.y, mainCanvas.width, mainCanvas.height);\n        mainCanvas.render();\n        obstacle.render();\n        radar.render();\n        RadarCanvas.render();\n    });\n})();\n\n\n//# sourceMappingURL=radar.2e820736.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"3tlcY\\\",\\\"radar.2e820736.js\\\",\\\"aWJnt\\\",\\\"example_of_map.27c12f3d.png\\\"]\"));","import { Canvas } from \"./Canvas\";\nimport { KeyBoardHandler } from \"./KeyBoardHandler\";\nimport { Obstacle } from \"./Obstacle\";\nimport { Performance } from \"./Performance\";\nimport { Radar } from \"./Radar\";\nimport { RadarScreen } from \"./RadarScreen\";\n\n(function () {\n  const mainCanvas = new Canvas();\n  const keyboard = new KeyBoardHandler();\n  const obstacle = new Obstacle(mainCanvas, keyboard);\n  const radar = new Radar(mainCanvas, obstacle);\n  const RadarCanvas = new RadarScreen(radar);\n\n  new Performance().render(() => {\n    mainCanvas.ctx.clearRect(mainCanvas.x, mainCanvas.y, mainCanvas.width, mainCanvas.height);\n    mainCanvas.render();\n\n    obstacle.render();\n    radar.render();\n\n    RadarCanvas.render();\n  });\n})();\n","import MapImage from \"./example_of_map.png\";\n// IMAGE FROM https://github.com/le-chartreux/pyprocgen IN 10/18/2023\n\nexport class Canvas {\n  element: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n\n  imageMap: HTMLImageElement;\n  imageMapIsLoaded: boolean;\n\n  constructor() {\n    this.element = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    this.ctx = this.element.getContext(\"2d\") as CanvasRenderingContext2D;\n\n    this.x = 0;\n    this.y = 0;\n    this.width = 1000;\n    this.height = 500;\n\n    this.imageMap = new Image();\n\n    this.imageMap.src = MapImage;\n\n    this.imageMap.onload = () => {\n      this.imageMapIsLoaded = true;\n    };\n  }\n\n  render() {\n    if (!this.imageMapIsLoaded) {\n      return;\n    }\n\n    this.ctx.beginPath();\n    let pattern1Image = this.ctx.createPattern(this.imageMap, \"repeat\");\n    const widthRect = 2339;\n    const height = 1370;\n    const widthImage = this.imageMap.width;\n\n    const svgMatrix: SVGMatrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n\n    pattern1Image.setTransform(svgMatrix.scale(widthRect / widthImage));\n\n    this.ctx.fillStyle = pattern1Image;\n    this.ctx.fillRect(0, 0, widthRect, height);\n    this.ctx.closePath();\n  }\n}\n","module.exports = new __parcel__URL__(\"example_of_map.27c12f3d.png\").toString();","import { keyboardStateType } from \"./types\";\n\nexport class KeyBoardHandler {\n  keyboardState: keyboardStateType;\n  constructor() {\n    this.keyboardState = {\n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n      KeyQ: false,\n      KeyE: false\n    };\n\n    const moves = {\n      KeyW: (newValue) => {\n        this.keyboardState.top = newValue;\n      },\n      KeyS: (newValue) => {\n        this.keyboardState.bottom = newValue;\n      },\n      KeyA: (newValue) => {\n        this.keyboardState.left = newValue;\n      },\n      KeyD: (newValue) => {\n        this.keyboardState.right = newValue;\n      },\n\n      KeyQ: (newValue) => {\n        this.keyboardState.KeyQ = newValue;\n      },\n      KeyE: (newValue) => {\n        this.keyboardState.KeyE = newValue;\n      },\n      \n    };\n\n    window.addEventListener(\"keydown\", (event) => {\n      moves[event.code]?.(true);\n    });\n\n    window.addEventListener(\"keyup\", (event) => {\n      moves[event.code]?.(false);\n    });\n  }\n}\n","import { Canvas } from \"./Canvas\";\nimport { KeyBoardHandler } from \"./KeyBoardHandler\";\n\nexport class Obstacle {\n  canvas: Canvas;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  keyboard: KeyBoardHandler;\n  xVelocity: number;\n  yVelocity: number;\n\n  constructor(canvas: Canvas, keyboardHandler: KeyBoardHandler) {\n    this.keyboard = keyboardHandler;\n    this.canvas = canvas;\n    this.x = 300;\n    this.y = 200;\n    this.width = 5;\n    this.height = 5;\n    this.xVelocity = 0;\n    this.yVelocity = 0;\n  }\n\n  render() {\n    if (this.keyboard.keyboardState.top) {\n      this.yVelocity -= 0.2;\n    }\n\n    if (this.keyboard.keyboardState.bottom) {\n      this.yVelocity += 0.2;\n    }\n\n    if (this.keyboard.keyboardState.left) {\n      this.xVelocity -= 0.2;\n    }\n\n    if (this.keyboard.keyboardState.right) {\n      this.xVelocity += 0.2;\n    }\n\n    this.x += this.xVelocity;\n    this.y += this.yVelocity;\n    if (this.keyboard.keyboardState.KeyQ) {\n      this.width -= 5;\n      this.height -= 5;\n    }\n\n    if (this.keyboard.keyboardState.KeyE) {\n      this.width += 5;\n      this.height += 5;\n    }\n\n    this.canvas.ctx.beginPath();\n\n    this.canvas.ctx.fillStyle = \"#ffde3c\";\n    this.canvas.ctx.font = \"16px Arial\";\n    this.canvas.ctx.textAlign = \"center\";\n    this.canvas.ctx.fillText(\n      `X=${Math.floor(this.x)} Y=${Math.floor(this.y)} VX=${Number(this.xVelocity.toFixed(1))} VY=${Number(this.yVelocity.toFixed(1))}`,\n      this.x,\n      this.y - 10\n    );\n\n    this.canvas.ctx.fillStyle = \"#ffff22\";\n    this.canvas.ctx.fillRect(this.x, this.y, this.width, this.height);\n    this.canvas.ctx.closePath();\n  }\n}\n","const targetFrames = 60;\n\nexport class Performance {\n  render(callback: () => void) {\n    let lastTime = performance.now();\n    const frameDuration = 1000 / targetFrames;\n\n    const bootstrap = (currentTime: number) => {\n      const deltaTime = currentTime - lastTime;\n\n      if (deltaTime >= frameDuration) {\n        callback();\n\n        lastTime = currentTime;\n      }\n\n      requestAnimationFrame(bootstrap);\n    };\n\n    requestAnimationFrame(bootstrap);\n  }\n}\n","import { Canvas } from \"./Canvas\";\nimport { Obstacle } from \"./Obstacle\";\nimport { Pulse } from \"./Pulse\";\nimport { calculateNewFrequency, calculateRadialVelocity, calculateTargetVelocity } from \"./dopplerUtils\";\nimport { calculatePositionXYTarget, isColliding, normalizeToClosestThousand } from \"./utils\";\n\nconst maxNumberToExcedsHex = 100000;\nconst max2Frequencty = 10000000;\ntype sendFrequencyMapType = {\n  timeStart: number;\n  angle0360: number;\n  xStart: number;\n  yStart: number;\n  timeRecievid?: number;\n  frequencyRecieved?: number;\n};\n\nexport class Radar {\n  pulses: Pulse[] = [];\n  angle0360: number;\n  angle0360V2: number;\n  canvas: Canvas;\n  obstacle: Obstacle;\n  xSendPulses: number;\n  ySendPulses: number;\n  width: number;\n  height: number;\n  frequency: number;\n  frequency2: number;\n  frequencyGapToDoppler: number;\n  frequencySendList: { [frequency: number]: sendFrequencyMapType };\n\n  constructor(canvas: Canvas, obstacle: Obstacle) {\n    this.obstacle = obstacle;\n    this.canvas = canvas;\n    this.angle0360 = 0;\n    this.angle0360V2 = 180;\n    this.xSendPulses = 100;\n    this.ySendPulses = 300;\n    this.width = 20;\n    this.height = 20;\n    this.frequency = 0;\n    this.frequency2 = maxNumberToExcedsHex;\n\n    this.frequencyGapToDoppler = 1000;\n    this.frequencySendList = {};\n  }\n\n  detectReport() {\n    this.pulses.forEach((pulse) => {\n      if (\n        pulse.isActive &&\n        !pulse.isInInitialDirection &&\n        isColliding(\n          { x: pulse.x, y: pulse.y, width: pulse.sizeWidth, height: pulse.sizeHeight },\n          { x: this.xSendPulses, y: this.ySendPulses, width: this.width, height: this.height }\n        )\n      ) {\n        const probablyRealFrequency = normalizeToClosestThousand(pulse.publicFrequency);\n        this.frequencySendList[probablyRealFrequency] = {\n          ...this.frequencySendList[probablyRealFrequency],\n          timeRecievid: new Date().getTime(),\n          frequencyRecieved: pulse.publicFrequency,\n        };\n\n        pulse.deactivate();\n      }\n    });\n  }\n\n  mapObjects() {\n    const returnItems: { targetX: number; targetY: number; timeRecieved: number; RadialVelocityTarget: number }[] = [];\n    const keys = Object.keys(this.frequencySendList);\n\n    keys.forEach((key) => {\n      if (this.frequencySendList[key].timeRecievid) {\n        const deltaTime = this.frequencySendList[key].timeRecievid - this.frequencySendList[key].timeStart;\n        const estimatedDistance = (deltaTime * 800) / 2817;\n\n        const data = calculatePositionXYTarget(this.xSendPulses, this.ySendPulses, estimatedDistance, this.frequencySendList[key].angle0360);\n\n        const RadialVelocityTarget = calculateTargetVelocity(this.frequencySendList[key].frequencyRecieved, Number(key), 12345);\n        returnItems.push({ ...data, timeRecieved: this.frequencySendList[key].timeRecievid, RadialVelocityTarget });\n      }\n    });\n    return returnItems;\n  }\n\n  deactivatePulse(pulse: Pulse) {\n    pulse.deactivate();\n  }\n\n  cleanup() {\n    this.pulses = this.pulses.filter((pulse) => pulse.isActive);\n  }\n\n  renderPulses() {\n    this.pulses.forEach((pulse) => {\n      pulse.render();\n\n      if (pulse.isInInitialDirection && isColliding({ x: pulse.x, y: pulse.y, width: pulse.sizeWidth, height: pulse.sizeHeight }, this.obstacle)) {\n        pulse.returnDirection();\n\n        const radialVelocity = calculateRadialVelocity(\n          { x: this.xSendPulses, y: this.ySendPulses },\n\n          {\n            x: this.obstacle.x,\n            y: this.obstacle.y,\n          },\n          {\n            x: this.obstacle.xVelocity,\n            y: this.obstacle.yVelocity,\n          }\n        );\n\n        Math.sqrt(this.obstacle.xVelocity * this.obstacle.xVelocity + this.obstacle.yVelocity * this.obstacle.yVelocity);\n        pulse.publicFrequency = calculateNewFrequency(radialVelocity, pulse.publicFrequency, 12345);\n      }\n    });\n  }\n\n  render() {\n    // this.canvas.ctx.beginPath();\n    // this.canvas.ctx.fillStyle = \"#222222\";\n    // this.canvas.ctx.fillRect(this.xSendPulses, this.ySendPulses, this.width, this.height);\n    // this.canvas.ctx.closePath();\n\n    this.frequency += this.frequencyGapToDoppler;\n    this.frequency2 += this.frequencyGapToDoppler;\n\n    if (this.frequency > maxNumberToExcedsHex) {\n      this.frequency = 0;\n    }\n\n    if (this.frequency2 > max2Frequencty) {\n      this.frequency2 = maxNumberToExcedsHex + this.frequencyGapToDoppler;\n    }\n\n    this.angle0360 += 3;\n    if (this.angle0360 >= 360) {\n      this.angle0360 = 0;\n    }\n\n    this.angle0360V2 += 3;\n    if (this.angle0360V2 >= 360) {\n      this.angle0360V2 = 0;\n    }\n\n    const angleInRadians = this.angle0360 * (Math.PI / 180);\n    const pulseSpeed = 20;\n    this.frequencySendList[this.frequency] = {\n      timeStart: new Date().getTime(),\n      angle0360: this.angle0360,\n      xStart: this.xSendPulses,\n      yStart: this.ySendPulses,\n      timeRecievid: undefined,\n      frequencyRecieved: undefined,\n    };\n    this.pulses.push(new Pulse(this.canvas, angleInRadians, pulseSpeed, this.xSendPulses, this.ySendPulses, this.frequency));\n\n    //\n\n    const angleInRadiansV2 = this.angle0360V2 * (Math.PI / 180);\n    const pulseSpeedV2 = 15;\n    this.frequencySendList[this.frequency2] = {\n      timeStart: new Date().getTime(),\n      angle0360: this.angle0360V2,\n      xStart: this.xSendPulses,\n      yStart: this.ySendPulses,\n      timeRecievid: undefined,\n      frequencyRecieved: undefined,\n    };\n    this.pulses.push(new Pulse(this.canvas, angleInRadiansV2, pulseSpeedV2, this.xSendPulses, this.ySendPulses, this.frequency2));\n\n    this.renderPulses();\n\n    this.cleanup();\n\n    this.detectReport();\n  }\n}\n","import { Canvas } from \"./Canvas\";\n\nexport class Pulse {\n  canvas: Canvas;\n\n  x: number;\n  y: number;\n  velocityX: number;\n  velocityY: number;\n  sizeWidth: number;\n  sizeHeight: number;\n\n  isActive: boolean;\n\n  maxLifeInRender: number;\n  lifeRender: number;\n\n  isInInitialDirection: boolean;\n  publicFrequency: number;\n\n  constructor(canvas: Canvas, angle: number, speed: number, x: number, y: number, frequency: number) {\n    this.canvas = canvas;\n    this.isInInitialDirection = true;\n    this.publicFrequency = frequency;\n\n    this.isActive = true;\n\n    this.x = x;\n    this.y = y;\n\n    this.velocityX = Math.cos(angle) * speed;\n    this.velocityY = Math.sin(angle) * speed;\n    this.maxLifeInRender = 500;\n    this.lifeRender = 0;\n    this.sizeWidth = 2;\n    this.sizeHeight = 2;\n  }\n\n  deactivate() {\n    this.isActive = false;\n  }\n\n  returnDirection() {\n    this.velocityX = this.velocityX * -1;\n    this.velocityY = this.velocityY * -1;\n    this.isInInitialDirection = false;\n  }\n\n  render() {\n    if (!this.isActive) return;\n\n    this.x += this.velocityX;\n    this.y += this.velocityY;\n\n    if (this.isInInitialDirection) {\n      this.sizeWidth += 1;\n      this.sizeHeight += 1;\n    } else {\n      if (this.sizeWidth >= 0) {\n        this.sizeWidth -= 1;\n        this.sizeHeight -= 1;\n      } else {\n        this.deactivate();\n      }\n    }\n\n    this.canvas.ctx.beginPath();\n    this.canvas.ctx.fillStyle = \"#ffffff\";\n    this.canvas.ctx.fillRect(this.x, this.y, this.sizeWidth, this.sizeHeight);\n    this.canvas.ctx.closePath();\n\n    this.lifeRender += 1;\n\n    if (this.lifeRender >= this.maxLifeInRender) {\n      this.deactivate();\n    }\n  }\n}\n","// DOPPLER\n// f' = f * (v + k)\n//          (v + x)\n//\n// k = radar = 0\n// f' = f *   v\n//          (v + x)\n//\n// MULTIPLY BY (v + x)\n//\n// f' * (v+x) = f * v\n//\n// f'v + f'x = f * v\n//\n// f'x = (f * v) - f'v\n//\n//f' = f + fΔ\n//\n// (f+fΔ)x = fv - (f + fΔ)v\n//\n// (f+fΔ)x = fv - fv + fΔv\n//\n// (f+fΔ)x = fΔv\n//\n// x =  fΔv\n//     (f+fΔ)\n//\n// frequencyChange = fΔ = f' - f\n// x =  (frequencyChange *  speedWave) / (baseFrequency + frequencyChange)\n//\n\nexport const calculateTargetVelocity = (observedFrequency: number, baseFrequency: number, speedWave: number): number => {\n  const frequencyChange = observedFrequency - baseFrequency;\n  const velocity = (frequencyChange * speedWave) / (baseFrequency + frequencyChange);\n  return velocity;\n};\n\n// DOPPLER\n// f' = f * (v + k)\n//          (v + x)\n//\nexport const calculateNewFrequency = (targetVelocity: number, baseFrequency: number, speedWave: number): number => {\n  return baseFrequency * (speedWave / (speedWave + targetVelocity));\n};\n\n// to calculate new frequency\nexport const calculateRadialVelocity = (radarPosition: { x: number; y: number }, objectPosition: { x: number; y: number }, objectVelocity: { x: number; y: number }) => {\n  const directionalVectorX = objectPosition.x - radarPosition.x;\n  const directionVectorY = objectPosition.y - radarPosition.y;\n\n  const magnitude = Math.sqrt(directionalVectorX ** 2 + directionVectorY ** 2);\n\n  const normalizedDirectionalVectorX = directionalVectorX / magnitude;\n  const normalizedDirectionVectorY = directionVectorY / magnitude;\n\n  return objectVelocity.x * normalizedDirectionalVectorX + objectVelocity.y * normalizedDirectionVectorY;\n};\n","type BoxType = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nexport const isColliding = (box1: BoxType, box2: BoxType): boolean => {\n  const box2NotCollideRight = box2.x > box1.x + box1.width;\n  const box1NotColliedRight = box1.x > box2.x + box2.width;\n  const box2NotColliedBottom = box2.y > box1.y + box1.height;\n  const box1NotColliedBottom = box1.y > box2.y + box2.height;\n\n  return !(box2NotCollideRight || box1NotColliedRight || box2NotColliedBottom || box1NotColliedBottom);\n};\n\nconst degreesToRadians = (degrees: number): number => {\n  return degrees * (Math.PI / 180);\n};\n\nexport const calculatePositionXYTarget = (radarOriginX: number, radarOriginY: number, distanceFromRadarHypotenuse: number, angleInDegrees: number) => {\n  let angleInRadians = degreesToRadians(angleInDegrees);\n\n  let adjacentLeg = distanceFromRadarHypotenuse * Math.cos(angleInRadians);\n  let oppositeLeg = distanceFromRadarHypotenuse * Math.sin(angleInRadians);\n\n  let targetX = radarOriginX + adjacentLeg;\n  let targetY = radarOriginY + oppositeLeg;\n\n  return {\n    targetX,\n    targetY,\n  };\n};\n\nexport function normalizeToClosestThousand(value: number): number {\n  return Math.round(value / 1000) * 1000;\n}\n","import { Radar } from \"./Radar\";\nimport { isColliding } from \"./utils\";\n\nexport class RadarScreen {\n  element: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  radar: Radar;\n\n  constructor(radar: Radar) {\n    this.radar = radar;\n\n    this.element = document.getElementById(\"canvas2\") as HTMLCanvasElement;\n    this.ctx = this.element.getContext(\"2d\") as CanvasRenderingContext2D;\n\n    this.x = 0;\n    this.y = 0;\n    this.width = 1000;\n    this.height = 500;\n  }\n\n  render() {\n    const detections = this.radar.mapObjects();\n\n    this.ctx.clearRect(0, 0, 500, 500);\n\n    this.ctx.arc(250, 250, 250, 0, 2 * Math.PI);\n    this.ctx.strokeStyle = \"#44de3c\";\n    this.ctx.stroke();\n\n    let lastDetection: { x: number; y: number } = { x: 0, y: 0 };\n\n    detections.forEach((item) => {\n      if (new Date().getTime() - item.timeReceived <= 2000) {\n        this.ctx.beginPath();\n\n        if (\n          !isColliding(\n            {\n              x: item.targetX / 3,\n              y: item.targetY / 3,\n              width: 30,\n              height: 30,\n            },\n            {\n              x: lastDetection.x,\n              y: lastDetection.y,\n              width: 30,\n              height: 30,\n            }\n          )\n        ) {\n          this.ctx.fillStyle = \"#44de3c\";\n          this.ctx.font = \"16px Arial\";\n          this.ctx.textAlign = \"center\";\n          this.ctx.fillText(\n            `X=${Math.floor(item.targetX)} Y=${Math.floor(item.targetY)} RV=${Number(item.RadialSpeedTarget.toFixed(2))}`,\n            Math.floor(item.targetX / 3),\n            Math.floor(item.targetY / 3) - 10\n          );\n\n          lastDetection = {\n            x: item.targetX / 3,\n            y: item.targetY / 3,\n          };\n        }\n\n        this.ctx.fillStyle = \"#44de3c\";\n        this.ctx.fillRect(item.targetX / 3, item.targetY / 3, 10, 10);\n        this.ctx.closePath();\n      }\n    });\n  }\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","mainCanvas","keyboard","obstacle","radar","RadarCanvas","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$67f1d78c56d14db7$exports","$9f98d63698d0509d$export$8d01c972ee8b14a9","Canvas","a","_this","element","document","getElementById","ctx","getContext","x","y","width","height","imageMap","Image","src","__esModule","default","onload","imageMapIsLoaded","prototype","render","beginPath","pattern1Image","createPattern","widthImage","svgMatrix","createElementNS","createSVGMatrix","setTransform","scale","widthRect","fillStyle","fillRect","closePath","$5b139ef7702c9fb6$export$83b45c7b75260f83","Obstacle","canvas","keyboardHandler","xVelocity","yVelocity","keyboardState","top","bottom","left","right","KeyQ","KeyE","font","textAlign","fillText","concat","Math","floor","Number","toFixed","$6a873260438f2416$export$7e252627609de684","Performance","callback","lastTime","performance","now","bootstrap","currentTime","requestAnimationFrame","$f4a2aea617e9cf33$exports","$f4a2aea617e9cf33$export$bace472c466fdd25","$11e7ceeebb94ef48$export$927d63e2511364c0","Pulse","angle","speed","frequency","isInInitialDirection","publicFrequency","isActive","velocityX","cos","velocityY","sin","maxLifeInRender","lifeRender","sizeWidth","sizeHeight","deactivate","returnDirection","$0d77b57ffac5c975$export$539f0399746e9c38","observedFrequency","baseFrequency","speedWave","frequencyChange","$0d77b57ffac5c975$export$7f8704557ed79bfe","radarPosition","objectPosition","objectVelocity","directionalVectorX","directionVectorY","magnitude","sqrt","pow","$3cedec3cade137c3$export$5efe44c485c74673","box1","box2","box2NotCollideRight","box1NotColliedRight","box2NotColliedBottom","box1NotColliedBottom","$3cedec3cade137c3$export$a27d9ba13cc47e16","radarOriginX","radarOriginY","distanceFromRadarHypotenuse","angleInDegrees","angleInRadians","degrees","PI","targetX","targetY","$f4a2aea617e9cf33$var$__assign","assign","t","arguments","p","hasOwnProperty","apply","Radar","pulses","angle0360","angle0360V2","xSendPulses","ySendPulses","frequency2","frequencyGapToDoppler","frequencySendList","detectReport","forEach","pulse","probablyRealFrequency","round","value","timeRecievid","Date","getTime","frequencyRecieved","mapObjects","returnItems","keys","key","deltaTime","timeStart","data","RadialVelocityTarget","push","timeRecieved","deactivatePulse","cleanup","filter","renderPulses","radialVelocity","$f4a2aea617e9cf33$var$maxNumberToExcedsHex","xStart","yStart","undefined","angleInRadiansV2","$424303fe1d5ebf82$export$8b99deabfaab0abf","RadarScreen","detections","clearRect","arc","strokeStyle","stroke","lastDetection","item","timeReceived","RadialSpeedTarget","moves","KeyW","newValue","KeyS","KeyA","KeyD","window","addEventListener","event","_a"],"version":3,"file":"radar.2e820736.js.map"}