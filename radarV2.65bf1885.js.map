{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,E,O,G,E,U,C,E,O,C,C,C,IGWQ,EACA,EAEA,EACA,EACA,EAEA,EACA,EAEA,EACA,E,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,W,I,E,A,G,E,GFpBR,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,wa,I,E,C,E,E,E,qB,I,G,I,E,W,M,A,C,E,O,M,E,S,C,E,I,I,E,E,E,E,U,M,C,E,E,I,I,I,K,E,S,C,E,C,O,S,C,c,C,I,C,E,I,C,C,C,E,C,C,C,E,A,E,O,C,C,E,K,C,I,C,U,EEM5F,EAAA,WAAA,EAAA,WAQE,SAAA,EAAY,CAA4B,CAAE,CAAgC,EAA1E,IAAA,EAAA,IAAA,AACE,CAAA,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,eAAe,CAAG,EACvB,IAAI,CAAC,aAAa,CAAG,EAAgB,aAAa,CAElD,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,UAAU,CAAG,EAElB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,aAAc,SAAC,CAAK,EAAK,OAAA,EAAK,gBAAgB,CAAC,EAAtB,EAA8B,CAAA,GAC5F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,g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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-d3fe23d0788db641.js","src/radarV2/index.ts","src/radarV2/InteractionHandler.ts","src/radarV2/KeyBoardHandler.ts","src/radarV2/obstacle/index.ts","node_modules/@parcel/runtime-js/lib/runtime-83b39742900b62a6.js","node_modules/@parcel/runtime-js/lib/runtime-0f51e10c42d2ea9d.js","node_modules/@parcel/runtime-js/lib/runtime-a0097e08258365ed.js","src/radarV2/utils.ts","node_modules/@parcel/runtime-js/lib/runtime-60a94e11c0b8ba72.js","src/radarV2/Performance.ts","src/radarV2/radar/index.ts","src/radarV2/radar/Pulse.ts","src/radarV2/radar/PulseColor.ts","src/radarV2/radar/math/calculateNewFrequency.ts","src/radarV2/radar/math/calculateRadialVelocity.ts","node_modules/@parcel/runtime-js/lib/runtime-36d26480646bf7ff.js","src/radarV2/radar/math/calculateTargetVelocity.ts","src/radarV2/radarScreen/index.ts","node_modules/@parcel/runtime-js/lib/runtime-23acb5550c2af777.js","src/radarV2/scenario/index.ts","node_modules/@parcel/runtime-js/lib/runtime-018dd2bae95a5a49.js","src/radarV2/Ui.ts","src/radarV2/UiMainCanvas.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiree935\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiree935\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $63f375808872ede9$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"ghItd\",\"radarV2.65bf1885.js\",\"fUPKt\",\"helicopter_r1.d679ec66.png\",\"b4iWM\",\"helicopter_r2.3eb7d1f0.png\",\"9hF0h\",\"helicopter_r3.e9431d04.png\",\"7r8yT\",\"military-rotor-loop.987d95f8.wav\",\"eElcJ\",\"radar.ac49fdbd.png\",\"3HQQX\",\"radar-detected.2f54b526.wav\",\"hn9kt\",\"warShip.6c1fc1ef.png\"]'));\n\nvar $cc28301823d2abc3$exports = {};\n\n$parcel$export($cc28301823d2abc3$exports, \"InteractionHandler\", () => $cc28301823d2abc3$export$a30cd982b4e89bdb);\nvar $cc28301823d2abc3$var$__assign = undefined && undefined.__assign || function() {\n    $cc28301823d2abc3$var$__assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $cc28301823d2abc3$var$__assign.apply(this, arguments);\n};\nvar $cc28301823d2abc3$export$a30cd982b4e89bdb = /** @class */ function() {\n    function InteractionHandler(canvas, keyBoardHandler) {\n        var _this = this;\n        this.canvas = canvas;\n        this.keyBoardHandler = keyBoardHandler;\n        this.keyboardState = keyBoardHandler.keyboardState;\n        this.lastXClick = 0;\n        this.lastYClick = 0;\n        this.canvas.element.addEventListener(\"touchstart\", function(event) {\n            return _this.handleTouchStart(event);\n        }, false);\n        this.canvas.element.addEventListener(\"mousedown\", function(event) {\n            return _this.handleMouseDown(event);\n        }, false);\n    }\n    InteractionHandler.prototype.handleTouchStart = function(event) {\n        this.getCanvasCoordinates(event);\n        console.log(\"Touch started at x: \".concat(this.lastXClick, \", y: \").concat(this.lastYClick));\n    };\n    InteractionHandler.prototype.handleMouseDown = function(event) {\n        this.getCanvasCoordinates(event);\n        console.log(\"Mouse down at x: \".concat(this.lastXClick, \", y: \").concat(this.lastYClick));\n    };\n    InteractionHandler.prototype.setUi = function(ui) {\n        this.ui = ui;\n    };\n    InteractionHandler.prototype.resetClick = function() {\n        this.lastXClick = 0;\n        this.lastYClick = 0;\n    };\n    InteractionHandler.prototype.getCanvasCoordinates = function(event) {\n        var rect = this.canvas.element.getBoundingClientRect();\n        if (event.touches) {\n            this.lastXClick = event.touches[0].clientX - rect.left;\n            this.lastYClick = event.touches[0].clientY - rect.top;\n        } else {\n            this.lastXClick = event.clientX - rect.left;\n            this.lastYClick = event.clientY - rect.top;\n        }\n    };\n    InteractionHandler.prototype.hasCollision = function(keyName) {\n        var insideXPosition = this.lastXClick >= this.ui.positions[keyName].x && this.lastXClick <= this.ui.positions[keyName].x + this.ui.positions[keyName].width;\n        var insideYPosition = this.lastYClick >= this.ui.positions[keyName].y && this.lastYClick <= this.ui.positions[keyName].y + this.ui.positions[keyName].height;\n        return insideXPosition && insideYPosition;\n    };\n    InteractionHandler.prototype.render = function() {\n        var newKeyBoardState = $cc28301823d2abc3$var$__assign({}, this.keyBoardHandler.keyboardState);\n        if (this.lastXClick && this.lastYClick) {\n            if (this.hasCollision(\"KeyQ\")) newKeyBoardState.KeyQ = true;\n            if (this.hasCollision(\"KeyE\")) newKeyBoardState.KeyE = true;\n            if (this.hasCollision(\"top\")) newKeyBoardState.top = true;\n            if (this.hasCollision(\"left\")) newKeyBoardState.left = true;\n            if (this.hasCollision(\"right\")) newKeyBoardState.right = true;\n            if (this.hasCollision(\"bottom\")) newKeyBoardState.bottom = true;\n        }\n        this.resetClick();\n        this.keyboardState = newKeyBoardState;\n    };\n    return InteractionHandler;\n}();\n\n\nvar $c02fb4bb949e3255$export$6a77e7ef76b918fb = /** @class */ function() {\n    function KeyBoardHandler() {\n        var _this = this;\n        this.keyboardState = {\n            top: false,\n            left: false,\n            bottom: false,\n            right: false,\n            KeyQ: false,\n            KeyE: false\n        };\n        var moves = {\n            KeyW: function(newValue) {\n                _this.keyboardState.top = newValue;\n            },\n            KeyS: function(newValue) {\n                _this.keyboardState.bottom = newValue;\n            },\n            KeyA: function(newValue) {\n                _this.keyboardState.left = newValue;\n            },\n            KeyD: function(newValue) {\n                _this.keyboardState.right = newValue;\n            },\n            KeyQ: function(newValue) {\n                _this.keyboardState.KeyQ = newValue;\n            },\n            KeyE: function(newValue) {\n                _this.keyboardState.KeyE = newValue;\n            }\n        };\n        window.addEventListener(\"keydown\", function(event) {\n            var _a;\n            (_a = moves[event.code]) === null || _a === void 0 || _a.call(moves, true);\n        });\n        window.addEventListener(\"keyup\", function(event) {\n            var _a;\n            (_a = moves[event.code]) === null || _a === void 0 || _a.call(moves, false);\n        });\n    }\n    return KeyBoardHandler;\n}();\n\n\nvar $71f3d169b73e120f$exports = {};\n$71f3d169b73e120f$exports = new URL(\"helicopter_r1.d679ec66.png\", import.meta.url).toString();\n\n\nvar $c29c06058067e98c$exports = {};\n$c29c06058067e98c$exports = new URL(\"helicopter_r2.3eb7d1f0.png\", import.meta.url).toString();\n\n\nvar $1bcc20570dc2f2c4$exports = {};\n$1bcc20570dc2f2c4$exports = new URL(\"helicopter_r3.e9431d04.png\", import.meta.url).toString();\n\n\nvar $a1c69b46dd95ec89$export$5efe44c485c74673 = function(box1, box2) {\n    var box2NotCollideRight = box2.x > box1.x + box1.width;\n    var box1NotColliedRight = box1.x > box2.x + box2.width;\n    var box2NotColliedBottom = box2.y > box1.y + box1.height;\n    var box1NotColliedBottom = box1.y > box2.y + box2.height;\n    return !(box2NotCollideRight || box1NotColliedRight || box2NotColliedBottom || box1NotColliedBottom);\n};\nvar $a1c69b46dd95ec89$export$c9fcf1a7df975d78 = function(degrees) {\n    return degrees * (Math.PI / 180);\n};\nfunction $a1c69b46dd95ec89$export$9dff6e91689146c1(value) {\n    return Math.round(value / 300) * 300;\n}\nvar $a1c69b46dd95ec89$export$5a06ce4246e5c5af = function(src, onLoad) {\n    var image = new Image();\n    image.src = src;\n    image.onload = function() {\n        onLoad(image);\n    };\n};\nvar $a1c69b46dd95ec89$export$af40482953bd6c4a = function(ctx, image, degrees, x, y, w, h) {\n    ctx.beginPath();\n    ctx.save();\n    ctx.translate(x + w / 2, y + h / 2);\n    ctx.rotate(degrees * Math.PI / 180.0);\n    ctx.translate(-x - w / 2, -y - h / 2);\n    ctx.drawImage(image, x, y, w, h);\n    ctx.restore();\n    ctx.closePath();\n};\n\n\nvar $386a4adc1c893683$exports = {};\n$386a4adc1c893683$exports = new URL(\"military-rotor-loop.987d95f8.wav\", import.meta.url).toString();\n\n\nvar $cfef0b18c883f872$var$ACCELERATION_FACTOR = 0.2;\nvar $cfef0b18c883f872$export$83b45c7b75260f83 = /** @class */ function() {\n    function Obstacle(canvas, keyboardHandler) {\n        var _this = this;\n        this.keyboard = keyboardHandler;\n        this.canvas = canvas;\n        this.x = 500;\n        this.y = 300;\n        this.width = 45;\n        this.height = 26;\n        this.xSpeed = 0;\n        this.ySpeed = 0;\n        this.currentImage = 0;\n        this.audio = new Audio();\n        this.audio.src = (0, (/*@__PURE__*/$parcel$interopDefault($386a4adc1c893683$exports)));\n        this.audio.volume = 0.5;\n        this.audio.loop = true;\n        this.canvas.element.addEventListener(\"click\", function() {\n            _this.audio.play();\n        });\n        (0, $a1c69b46dd95ec89$export$5a06ce4246e5c5af)((0, (/*@__PURE__*/$parcel$interopDefault($71f3d169b73e120f$exports))), function(imageLoaded) {\n            _this.image1 = imageLoaded;\n        });\n        (0, $a1c69b46dd95ec89$export$5a06ce4246e5c5af)((0, (/*@__PURE__*/$parcel$interopDefault($c29c06058067e98c$exports))), function(imageLoaded) {\n            _this.image2 = imageLoaded;\n        });\n        (0, $a1c69b46dd95ec89$export$5a06ce4246e5c5af)((0, (/*@__PURE__*/$parcel$interopDefault($1bcc20570dc2f2c4$exports))), function(imageLoaded) {\n            _this.image3 = imageLoaded;\n        });\n    }\n    Obstacle.prototype.updateSpeed = function() {\n        if (this.keyboard.keyboardState.top) this.ySpeed -= $cfef0b18c883f872$var$ACCELERATION_FACTOR;\n        if (this.keyboard.keyboardState.bottom) this.ySpeed += $cfef0b18c883f872$var$ACCELERATION_FACTOR;\n        if (this.keyboard.keyboardState.left) this.xSpeed -= $cfef0b18c883f872$var$ACCELERATION_FACTOR;\n        if (this.keyboard.keyboardState.right) this.xSpeed += $cfef0b18c883f872$var$ACCELERATION_FACTOR;\n    };\n    Obstacle.prototype.updateLocation = function() {\n        this.x += this.xSpeed;\n        this.y += this.ySpeed;\n    };\n    Obstacle.prototype.drawObstacleInfo = function() {\n        this.canvas.ctx.beginPath();\n        this.canvas.ctx.fillStyle = \"#ffffff\";\n        this.canvas.ctx.font = \"16px Arial\";\n        this.canvas.ctx.textAlign = \"center\";\n        var floorX = Math.floor(this.x);\n        var floorY = Math.floor(this.y);\n        var fixedVelocityX = Number(this.xSpeed.toFixed(1));\n        var fixedVelocityY = Number(this.ySpeed.toFixed(1));\n        this.canvas.ctx.fillText(\"xy=(\".concat(floorX, \", \").concat(floorY, \") vxy=(\").concat(fixedVelocityX, \", \").concat(fixedVelocityY, \")\"), this.x, this.y - 10);\n        this.canvas.ctx.closePath();\n    };\n    Obstacle.prototype.drawImageObstacle = function() {\n        this.canvas.ctx.beginPath();\n        this.currentImage += 1;\n        if (this.currentImage >= 3) this.currentImage = 0;\n        if (this.image1 && this.image2 && this.image3) {\n            var currentImageMap = {\n                0: this.image1,\n                1: this.image2,\n                2: this.image3\n            };\n            this.canvas.ctx.drawImage(currentImageMap[this.currentImage], this.x, this.y);\n        }\n        this.canvas.ctx.closePath();\n    };\n    Obstacle.prototype.drawObstacle = function() {\n        this.drawObstacleInfo();\n        this.drawImageObstacle();\n    };\n    Obstacle.prototype.render = function() {\n        this.updateSpeed();\n        this.updateLocation();\n        this.drawObstacle();\n    };\n    return Obstacle;\n}();\n\n\nvar $6f888304d2ddb669$var$targetFrames = 60;\nvar $6f888304d2ddb669$export$7e252627609de684 = /** @class */ function() {\n    function Performance() {}\n    Performance.prototype.render = function(callback) {\n        var lastTime = performance.now();\n        var frameDuration = 1000 / $6f888304d2ddb669$var$targetFrames;\n        var bootstrap = function(currentTime) {\n            var deltaTime = currentTime - lastTime;\n            if (deltaTime >= frameDuration) {\n                callback();\n                lastTime = currentTime;\n            }\n            requestAnimationFrame(bootstrap);\n        };\n        requestAnimationFrame(bootstrap);\n    };\n    return Performance;\n}();\n\n\nvar $25b56f938cdbb9cc$exports = {};\n\n$parcel$export($25b56f938cdbb9cc$exports, \"Radar\", () => $25b56f938cdbb9cc$export$bace472c466fdd25);\n\nvar $b9193c185532af84$export$8d01df666ca94528 = /** @class */ function() {\n    function PulseColor() {\n        this.r = 0;\n        this.g = 0;\n        this.b = 0;\n    }\n    PulseColor.prototype.toRgb = function() {\n        return \"rgb(\".concat(Math.floor(this.r), \", \").concat(Math.floor(this.g), \", \").concat(Math.floor(this.b), \")\");\n    };\n    PulseColor.prototype.getColorByFactorFrequency = function(frequency) {\n        var minFrequency = 0;\n        var maxFrequency = 100000;\n        var minColor = 80;\n        var maxColor = 120;\n        if (frequency < minFrequency) frequency = minFrequency;\n        if (frequency > maxFrequency) frequency = maxFrequency;\n        return (frequency - minFrequency) / (maxFrequency - minFrequency) * (maxColor - minColor) + minColor;\n    };\n    PulseColor.prototype.generateRgbByFrequency = function(frequency) {\n        var color = this.getColorByFactorFrequency(frequency);\n        this.r = color;\n        this.g = color;\n        this.b = color;\n    };\n    PulseColor.prototype.applyBlueShift = function(frequencyDiff) {\n        this.b += frequencyDiff / 300;\n    };\n    PulseColor.prototype.applyRedShift = function(frequencyDiff) {\n        this.r += frequencyDiff / 300;\n    };\n    return PulseColor;\n}();\n\n\nvar $662896bfded219c1$export$3bc99aa47f0f12de = function(targetVelocity, baseFrequency, speedWave) {\n    return baseFrequency * (speedWave / (speedWave + targetVelocity));\n};\n\n\nvar $eb4eeb43815ff4ff$export$7f8704557ed79bfe = function(radarPosition, objectPosition, objectVelocity) {\n    var directionalVectorX = objectPosition.x - radarPosition.x;\n    var directionVectorY = objectPosition.y - radarPosition.y;\n    var magnitude = Math.sqrt(Math.pow(directionalVectorX, 2) + Math.pow(directionVectorY, 2));\n    var normalizedDirectionalVectorX = directionalVectorX / magnitude;\n    var normalizedDirectionVectorY = directionVectorY / magnitude;\n    return objectVelocity.x * normalizedDirectionalVectorX + objectVelocity.y * normalizedDirectionVectorY;\n};\n\n\nvar $762428b391db5da1$var$MAX_LIFE_RENDER = 600;\nvar $762428b391db5da1$var$SPEED_WAVE = 12345;\nvar $762428b391db5da1$var$FACTOR_RESIZE_PULSE = 2;\nvar $762428b391db5da1$export$927d63e2511364c0 = /** @class */ function() {\n    function Pulse(canvas, angle, speed, x, y, frequency, obstacle, startPositionLaunch) {\n        this.x = x;\n        this.y = y;\n        this.width = 2;\n        this.height = 2;\n        this.lifeRender = 0;\n        this.isInInitialDirection = true;\n        this.canvas = canvas;\n        this.obstacle = obstacle;\n        this.frequency = frequency;\n        this.isActive = true;\n        this.speedX = Math.cos(angle) * speed;\n        this.speedY = Math.sin(angle) * speed;\n        this.startPositionLaunch = startPositionLaunch;\n        this.color = new (0, $b9193c185532af84$export$8d01df666ca94528)();\n        this.color.generateRgbByFrequency(frequency);\n    }\n    Pulse.prototype.destroyPulse = function() {\n        this.isActive = false;\n    };\n    Pulse.prototype.applyBlueShift = function(newFrequency) {\n        this.color.applyBlueShift(newFrequency);\n    };\n    Pulse.prototype.applyRedShift = function(newFrequency) {\n        this.color.applyRedShift(newFrequency);\n    };\n    Pulse.prototype.updateLocation = function() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n    };\n    Pulse.prototype.updateScale = function() {\n        if (this.isInInitialDirection) {\n            this.width += $762428b391db5da1$var$FACTOR_RESIZE_PULSE;\n            this.height += $762428b391db5da1$var$FACTOR_RESIZE_PULSE;\n        } else if (this.width >= 0) {\n            this.width -= $762428b391db5da1$var$FACTOR_RESIZE_PULSE;\n            this.height -= $762428b391db5da1$var$FACTOR_RESIZE_PULSE;\n        } else this.destroyPulse();\n    };\n    Pulse.prototype.drawPulse = function() {\n        this.canvas.ctx.beginPath();\n        this.canvas.ctx.fillStyle = this.color.toRgb();\n        this.canvas.ctx.fillRect(this.x, this.y, this.width, this.height);\n        this.canvas.ctx.closePath();\n    };\n    Pulse.prototype.handleLifeRender = function() {\n        this.lifeRender += 1;\n        if (this.lifeRender >= $762428b391db5da1$var$MAX_LIFE_RENDER) this.destroyPulse();\n    };\n    Pulse.prototype.invertDirection = function() {\n        this.speedX = this.speedX * -1;\n        this.speedY = this.speedY * -1;\n        this.isInInitialDirection = false;\n    };\n    Pulse.prototype.handleCollisionWithObstacle = function() {\n        var collisionWithObstacle = (0, $a1c69b46dd95ec89$export$5efe44c485c74673)(this, this.obstacle);\n        if (this.isInInitialDirection === false || collisionWithObstacle === false) return;\n        var radialVelocity = (0, $eb4eeb43815ff4ff$export$7f8704557ed79bfe)(this.startPositionLaunch, this.obstacle, {\n            x: this.obstacle.xSpeed,\n            y: this.obstacle.ySpeed\n        });\n        var newFrequency = (0, $662896bfded219c1$export$3bc99aa47f0f12de)(radialVelocity, this.frequency, $762428b391db5da1$var$SPEED_WAVE);\n        if (newFrequency > this.frequency) this.applyBlueShift(newFrequency);\n        if (newFrequency < this.frequency) this.applyRedShift(newFrequency);\n        this.invertDirection();\n        this.frequency = newFrequency;\n    };\n    Pulse.prototype.render = function() {\n        if (!this.isActive) return;\n        this.updateLocation();\n        this.updateScale();\n        this.drawPulse();\n        this.handleLifeRender();\n        this.handleCollisionWithObstacle();\n    };\n    return Pulse;\n}();\n\n\n\nvar $83ea8cc0ff3f036f$exports = {};\n$83ea8cc0ff3f036f$exports = new URL(\"radar.ac49fdbd.png\", import.meta.url).toString();\n\n\nvar $4dac877b74b4076a$export$539f0399746e9c38 = function(observedFrequency, baseFrequency, speedWave) {\n    var frequencyChange = observedFrequency - baseFrequency;\n    return frequencyChange * speedWave / (baseFrequency + frequencyChange);\n};\n\n\nvar $25b56f938cdbb9cc$var$__assign = undefined && undefined.__assign || function() {\n    $25b56f938cdbb9cc$var$__assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $25b56f938cdbb9cc$var$__assign.apply(this, arguments);\n};\nvar $25b56f938cdbb9cc$var$MAX_FREQUENCY = 900000;\nvar $25b56f938cdbb9cc$var$SPEED_WAVE = 12345;\nvar $25b56f938cdbb9cc$var$FACTOR_UPDATE_NEW_FREQUENCY = 300;\nvar $25b56f938cdbb9cc$export$bace472c466fdd25 = /** @class */ function() {\n    function Radar(canvas, obstacle) {\n        var _this = this;\n        this.pulses = [];\n        this.calculatePositionXYTarget = function(radarOriginX, radarOriginY, distanceFromRadarHypotenuse, angleInDegrees) {\n            var angleInRadians = (0, $a1c69b46dd95ec89$export$c9fcf1a7df975d78)(angleInDegrees);\n            var adjacentLeg = distanceFromRadarHypotenuse * Math.cos(angleInRadians);\n            var oppositeLeg = distanceFromRadarHypotenuse * Math.sin(angleInRadians);\n            var x = adjacentLeg;\n            var y = oppositeLeg;\n            return {\n                x: x,\n                y: y\n            };\n        };\n        this.obstacle = obstacle;\n        this.canvas = canvas;\n        this.currentDegree = 0;\n        this.x = 100;\n        this.y = 300;\n        this.width = 20;\n        this.height = 20;\n        this.frequency = 0;\n        this.databasePulses = {};\n        (0, $a1c69b46dd95ec89$export$5a06ce4246e5c5af)((0, (/*@__PURE__*/$parcel$interopDefault($83ea8cc0ff3f036f$exports))), function(loadedImage) {\n            _this.radarImage = loadedImage;\n        });\n    }\n    Radar.prototype.handleReturnedPulses = function() {\n        var _this = this;\n        this.pulses.forEach(function(pulse) {\n            var pulseTouchedInRadar = (0, $a1c69b46dd95ec89$export$5efe44c485c74673)(pulse, {\n                x: _this.x,\n                y: _this.y,\n                width: _this.width,\n                height: _this.height\n            });\n            if (!pulse.isActive || pulse.isInInitialDirection || !pulseTouchedInRadar) return;\n            var realFrequency = (0, $a1c69b46dd95ec89$export$9dff6e91689146c1)(pulse.frequency);\n            if (!_this.databasePulses[realFrequency]) {\n                pulse.destroyPulse();\n                return;\n            }\n            _this.databasePulses[realFrequency] = $25b56f938cdbb9cc$var$__assign($25b56f938cdbb9cc$var$__assign({}, _this.databasePulses[realFrequency]), {\n                timeReceived: new Date().getTime(),\n                frequencyReceived: pulse.frequency\n            });\n            pulse.destroyPulse();\n        });\n    };\n    Radar.prototype.calculateDistanceByLaunchAndReceivedTime = function(pulse) {\n        var deltaTime = pulse.timeReceived - pulse.timeLaunched;\n        return deltaTime * 800 / 2817;\n    };\n    Radar.prototype.calculateTargetInformation = function(pulse, frequencyLaunched) {\n        var estimatedDistance = this.calculateDistanceByLaunchAndReceivedTime(pulse);\n        var targetPosition = this.calculatePositionXYTarget(this.x, this.y, estimatedDistance, pulse.degree);\n        var radialSpeed = (0, $4dac877b74b4076a$export$539f0399746e9c38)(pulse.frequencyReceived, frequencyLaunched, $25b56f938cdbb9cc$var$SPEED_WAVE);\n        return {\n            timeReceived: pulse.timeReceived,\n            targetPosition: targetPosition,\n            estimatedDistance: estimatedDistance,\n            radialSpeed: radialSpeed\n        };\n    };\n    Radar.prototype.getDetectTargets = function() {\n        var _this = this;\n        var targets = [];\n        var frequenciesLaunched = Object.keys(this.databasePulses);\n        frequenciesLaunched.forEach(function(frequencyLaunched) {\n            var pulse = _this.databasePulses[frequencyLaunched];\n            if (!pulse.timeReceived) return;\n            targets.push(_this.calculateTargetInformation(pulse, Number(frequencyLaunched)));\n        });\n        return targets;\n    };\n    Radar.prototype.cleanup = function() {\n        this.pulses = this.pulses.filter(function(pulse) {\n            return pulse.isActive;\n        });\n    };\n    Radar.prototype.renderPulses = function() {\n        this.pulses.forEach(function(pulse) {\n            pulse.render();\n        });\n    };\n    Radar.prototype.updateFrequency = function() {\n        this.frequency += $25b56f938cdbb9cc$var$FACTOR_UPDATE_NEW_FREQUENCY;\n        if (this.frequency > $25b56f938cdbb9cc$var$MAX_FREQUENCY) this.frequency = 0;\n    };\n    Radar.prototype.updateDegree = function() {\n        this.currentDegree += 3;\n        if (this.currentDegree >= 360) this.currentDegree = 0;\n    };\n    Radar.prototype.drawRadarImage = function() {\n        if (this.radarImage) {\n            var x = this.x - 20;\n            var y = this.y - 20;\n            var width = this.width * 2;\n            var height = this.height * 2;\n            (0, $a1c69b46dd95ec89$export$af40482953bd6c4a)(this.canvas.ctx, this.radarImage, this.currentDegree, x, y, width, height);\n        }\n    };\n    Radar.prototype.launchPulse = function() {\n        var angleInRadians = (0, $a1c69b46dd95ec89$export$c9fcf1a7df975d78)(this.currentDegree);\n        var pulseSpeed = 20;\n        this.databasePulses[this.frequency] = {\n            timeLaunched: new Date().getTime(),\n            degree: this.currentDegree,\n            xLaunch: this.x,\n            yLaunch: this.y,\n            timeReceived: undefined,\n            frequencyReceived: undefined\n        };\n        this.pulses.push(new (0, $762428b391db5da1$export$927d63e2511364c0)(this.canvas, angleInRadians, pulseSpeed, this.x, this.y, this.frequency, this.obstacle, {\n            x: this.x,\n            y: this.y\n        }));\n    };\n    Radar.prototype.render = function() {\n        this.updateFrequency();\n        this.updateDegree();\n        this.drawRadarImage();\n        this.launchPulse();\n        this.renderPulses();\n        this.cleanup();\n        this.handleReturnedPulses();\n    };\n    return Radar;\n}();\n\n\nvar $1069337799a59fae$exports = {};\n\n$parcel$export($1069337799a59fae$exports, \"RadarScreen\", () => $1069337799a59fae$export$8b99deabfaab0abf);\n\nvar $842cbe6a75946193$exports = {};\n$842cbe6a75946193$exports = new URL(\"radar-detected.2f54b526.wav\", import.meta.url).toString();\n\n\nvar $1069337799a59fae$var$__assign = undefined && undefined.__assign || function() {\n    $1069337799a59fae$var$__assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $1069337799a59fae$var$__assign.apply(this, arguments);\n};\nvar $1069337799a59fae$var$MAX_RADAR_SCALE = 128;\nvar $1069337799a59fae$var$TIME_IN_MS_TO_IGNORE_KEYBOARD_ACTION = 200;\nvar $1069337799a59fae$var$MAX_TIME_TO_IGNORE_DETECTIONS = 12000;\nvar $1069337799a59fae$export$8b99deabfaab0abf = /** @class */ function() {\n    function RadarScreen(radar) {\n        this.radar = radar;\n        this.scale = 4;\n        this.element = document.getElementById(\"canvas2\");\n        this.ctx = this.element.getContext(\"2d\");\n        this.isInPreventMode = false;\n        this.x = 0;\n        this.y = 0;\n        this.width = 500;\n        this.height = 500;\n        this.timeToReset = 4000;\n        this.audio = new Audio();\n        this.audio.src = (0, (/*@__PURE__*/$parcel$interopDefault($842cbe6a75946193$exports)));\n        this.audio.volume = 0.5;\n    }\n    RadarScreen.prototype.setInteractionHandler = function(interactionHandler) {\n        this.interactionHandler = interactionHandler;\n    };\n    RadarScreen.prototype.changeScale = function() {\n        this.scale = this.scale * 2;\n        if (this.scale > $1069337799a59fae$var$MAX_RADAR_SCALE) this.scale = 1;\n    };\n    RadarScreen.prototype.drawRadarCircle = function() {\n        var _this = this;\n        var startDegree = 0;\n        var endDegree = 2 * Math.PI;\n        var x = this.width / 2;\n        var y = this.height / 2;\n        var factorEachArc = 50;\n        var radius = x;\n        var arcs = [\n            0,\n            1,\n            2,\n            3,\n            4\n        ];\n        arcs.forEach(function(arc) {\n            _this.ctx.beginPath();\n            _this.ctx.strokeStyle = \"#44de3c\";\n            _this.ctx.lineWidth = 1;\n            _this.ctx.arc(x, y, Math.floor(radius - factorEachArc * arc), startDegree, endDegree);\n            _this.ctx.closePath();\n            _this.ctx.stroke();\n        });\n    };\n    RadarScreen.prototype.getDetections = function() {\n        return this.radar.getDetectTargets();\n    };\n    RadarScreen.prototype.normalizeWithOnRadarCenter = function(x, y) {\n        return {\n            x: x / this.scale + this.width / 2,\n            y: y / this.scale + this.height / 2\n        };\n    };\n    RadarScreen.prototype.removeNormalizationRadarCenter = function(x, y) {\n        return {\n            x: x / this.scale - this.width / 2,\n            y: y / this.scale - this.height / 2\n        };\n    };\n    RadarScreen.prototype.isOutsideClusterZone = function(detection, lastDetection) {\n        return !(0, $a1c69b46dd95ec89$export$5efe44c485c74673)({\n            x: detection.targetPosition.x,\n            y: detection.targetPosition.y,\n            width: 20,\n            height: 20\n        }, {\n            x: lastDetection.x,\n            y: lastDetection.y,\n            width: 20,\n            height: 20\n        });\n    };\n    RadarScreen.prototype.drawInformationCluster = function(detection) {\n        this.ctx.fillStyle = \"#44de3c\";\n        this.ctx.font = \"bold 16px Verdana\";\n        this.ctx.textAlign = \"center\";\n        var sizesUnNormalized = this.removeNormalizationRadarCenter(detection.targetPosition.x, detection.targetPosition.y);\n        var targetXFloor = Math.floor(sizesUnNormalized.x);\n        var targetYFloor = Math.floor(sizesUnNormalized.y);\n        var radialSpeedTargetFixed = Number(detection.radialSpeed.toFixed(2)) || 0;\n        var x = Math.floor(detection.targetPosition.x);\n        var y = Math.floor(detection.targetPosition.y);\n        var estimatedDistanceFloor = Math.floor(detection.estimatedDistance);\n        var yNormalized = y > 0 ? y - 10 : y + 10;\n        this.ctx.fillText(\"xy(\".concat(targetXFloor, \", \").concat(targetYFloor, \") rv=\").concat(radialSpeedTargetFixed, \" d=\").concat(estimatedDistanceFloor), x, yNormalized);\n    };\n    RadarScreen.prototype.drawClusterItem = function(detection) {\n        this.ctx.fillStyle = \"#44de3c\";\n        this.ctx.fillRect(detection.targetPosition.x, detection.targetPosition.y, 10, 10);\n    };\n    RadarScreen.prototype.drawDetections = function(detections) {\n        var _this = this;\n        this.ctx.beginPath();\n        var lastDetection = {\n            x: 0,\n            y: 0\n        };\n        detections.forEach(function(detectionToIgnore) {\n            var targetNormalized = _this.normalizeWithOnRadarCenter(detectionToIgnore.targetPosition.x, detectionToIgnore.targetPosition.y);\n            var detectionNormalized = $1069337799a59fae$var$__assign($1069337799a59fae$var$__assign({}, detectionToIgnore), {\n                targetPosition: targetNormalized\n            });\n            var detectionIsVeryOld = new Date().getTime() - detectionNormalized.timeReceived > _this.timeToReset;\n            if (detectionIsVeryOld) return;\n            if (_this.isOutsideClusterZone(detectionNormalized, lastDetection)) {\n                _this.drawInformationCluster(detectionNormalized);\n                _this.audio.play();\n                lastDetection = {\n                    x: detectionNormalized.targetPosition.x,\n                    y: detectionNormalized.targetPosition.y\n                };\n            }\n            _this.drawClusterItem(detectionNormalized);\n        });\n        this.ctx.closePath();\n    };\n    RadarScreen.prototype.changeResetTime = function() {\n        this.timeToReset += 1000;\n        if (this.timeToReset > $1069337799a59fae$var$MAX_TIME_TO_IGNORE_DETECTIONS) this.timeToReset = 2000;\n    };\n    RadarScreen.prototype.render = function() {\n        var _this = this;\n        this.ctx.clearRect(0, 0, this.width, this.height);\n        if (this.interactionHandler.keyboardState.KeyQ && !this.isInPreventMode) {\n            this.isInPreventMode = true;\n            this.changeResetTime();\n            setTimeout(function() {\n                _this.isInPreventMode = false;\n            }, $1069337799a59fae$var$TIME_IN_MS_TO_IGNORE_KEYBOARD_ACTION);\n        }\n        if (this.interactionHandler.keyboardState.KeyE && !this.isInPreventMode) {\n            this.isInPreventMode = true;\n            this.changeScale();\n            setTimeout(function() {\n                _this.isInPreventMode = false;\n            }, $1069337799a59fae$var$TIME_IN_MS_TO_IGNORE_KEYBOARD_ACTION);\n        }\n        this.drawRadarCircle();\n        this.drawDetections(this.getDetections());\n        this.ctx.closePath();\n    };\n    return RadarScreen;\n}();\n\n\n\nvar $8c858ee291bf929d$exports = {};\n$8c858ee291bf929d$exports = new URL(\"warShip.6c1fc1ef.png\", import.meta.url).toString();\n\n\nvar $01265813a9fb4b20$export$8d01c972ee8b14a9 = /** @class */ function() {\n    function Canvas() {\n        var _this = this;\n        this.element = document.getElementById(\"canvas\");\n        this.ctx = this.element.getContext(\"2d\");\n        this.x = 0;\n        this.y = 0;\n        this.width = 1000;\n        this.height = 500;\n        (0, $a1c69b46dd95ec89$export$5a06ce4246e5c5af)((0, (/*@__PURE__*/$parcel$interopDefault($8c858ee291bf929d$exports))), function(loadedImage) {\n            _this.warShip = loadedImage;\n        });\n    }\n    Canvas.prototype.drawOcean = function() {\n        this.ctx.beginPath();\n        this.ctx.fillStyle = \"#4baff2\";\n        this.ctx.fillRect(0, 0, this.width, this.height);\n        this.ctx.closePath();\n    };\n    Canvas.prototype.drawWarShip = function() {\n        if (!this.warShip) return;\n        this.ctx.beginPath();\n        this.ctx.drawImage(this.warShip, -2, 248, 120, 120);\n        this.ctx.closePath();\n    };\n    Canvas.prototype.render = function() {\n        this.ctx.clearRect(this.x, this.y, this.width, this.height);\n        this.drawOcean();\n        this.drawWarShip();\n    };\n    return Canvas;\n}();\n\n\nvar $15f8127394952e2f$export$ce6abdcfcf17abde = /** @class */ function() {\n    function Ui(radarScreen, keyboardState) {\n        this.radarScreen = radarScreen;\n        this.keyboardState = keyboardState;\n        this.preventMultiplesActions = false;\n        this.positions = {};\n    }\n    Ui.prototype.renderButton = function(_a) {\n        var text = _a.text, x = _a.x, y = _a.y, xText = _a.xText, yText = _a.yText, isActive = _a.isActive;\n        if (isActive) {\n            this.radarScreen.ctx.fillStyle = \"#44de3c\";\n            this.radarScreen.ctx.fillRect(x, y, 40, 40);\n        } else {\n            this.radarScreen.ctx.strokeStyle = \"#44de3c\";\n            this.radarScreen.ctx.lineWidth = 3;\n            this.radarScreen.ctx.rect(x, y, 40, 40);\n            this.radarScreen.ctx.stroke();\n        }\n        this.radarScreen.ctx.fillStyle = isActive ? \"#000000\" : \"#44de3c\";\n        this.radarScreen.ctx.font = \"bold 18px Verdana\";\n        this.radarScreen.ctx.textAlign = \"center\";\n        this.radarScreen.ctx.fillText(text, xText, yText);\n    };\n    Ui.prototype.optionShowUi = function(height) {\n        var x = this.radarScreen.width - 50;\n        var y = height - 50;\n        this.positions.KeyQ = {\n            x: 10,\n            y: y,\n            height: 40,\n            width: 40\n        };\n        this.renderButton({\n            text: \"\".concat(this.radarScreen.timeToReset / 1000, \"s\"),\n            isActive: false,\n            x: 10,\n            y: y,\n            xText: 30,\n            yText: height - 23\n        });\n        this.positions.KeyE = {\n            x: x,\n            y: y,\n            height: 40,\n            width: 40\n        };\n        this.renderButton({\n            text: \"\".concat(this.radarScreen.scale, \"x\"),\n            isActive: false,\n            x: x,\n            y: y,\n            xText: this.radarScreen.width - 30,\n            yText: height - 23\n        });\n    };\n    Ui.prototype.render = function() {\n        this.radarScreen.ctx.beginPath();\n        this.optionShowUi(this.radarScreen.height / 8);\n        this.radarScreen.ctx.closePath();\n    };\n    return Ui;\n}();\n\n\nvar $c442a8e7c3e4bbe4$export$861f8d01d5f856c0 = /** @class */ function() {\n    function UiCanvas(canvas, keyboardState) {\n        this.canvas = canvas;\n        this.keyboardState = keyboardState;\n        this.preventMultiplesActions = false;\n        this.positions = {};\n    }\n    UiCanvas.prototype.renderButton = function(_a) {\n        var text = _a.text, x = _a.x, y = _a.y, xText = _a.xText, yText = _a.yText, isActive = _a.isActive;\n        if (isActive) {\n            this.canvas.ctx.fillStyle = \"#ffffff\";\n            this.canvas.ctx.fillRect(x, y, 40, 40);\n        } else {\n            this.canvas.ctx.strokeStyle = \"#ffffff\";\n            this.canvas.ctx.lineWidth = 3;\n            this.canvas.ctx.rect(x, y, 40, 40);\n            this.canvas.ctx.stroke();\n        }\n        this.canvas.ctx.fillStyle = isActive ? \"#000000\" : \"#ffffff\";\n        this.canvas.ctx.font = \"bold 18px Verdana\";\n        this.canvas.ctx.textAlign = \"center\";\n        this.canvas.ctx.fillText(text, xText, yText);\n    };\n    UiCanvas.prototype.optionShowUi = function(height) {\n        var x = this.canvas.width - 50;\n        var y = height - 50;\n        this.positions.top = {\n            x: x - 50,\n            y: y,\n            height: 40,\n            width: 40\n        };\n        this.renderButton({\n            text: \"w\",\n            isActive: false,\n            x: this.positions.top.x,\n            y: this.positions.top.y,\n            xText: this.canvas.width - 30 - 50,\n            yText: height - 23\n        });\n        this.positions.bottom = {\n            x: x - 50,\n            y: y + 50,\n            height: 40,\n            width: 40\n        };\n        this.renderButton({\n            text: \"s\",\n            isActive: false,\n            x: this.positions.bottom.x,\n            y: this.positions.bottom.y,\n            xText: this.canvas.width - 30 - 50,\n            yText: height - 23 + 50\n        });\n        this.positions.left = {\n            x: x - 100,\n            y: y + 50,\n            height: 40,\n            width: 40\n        };\n        this.renderButton({\n            text: \"a\",\n            isActive: false,\n            x: this.positions.left.x,\n            y: this.positions.left.y,\n            xText: this.canvas.width - 30 - 100,\n            yText: height - 23 + 50\n        });\n        this.positions.right = {\n            x: x,\n            y: y + 50,\n            height: 40,\n            width: 40\n        };\n        this.renderButton({\n            text: \"d\",\n            isActive: false,\n            x: this.positions.right.x,\n            y: this.positions.right.y,\n            xText: this.canvas.width - 30,\n            yText: height - 23 + 50\n        });\n    };\n    UiCanvas.prototype.render = function() {\n        this.canvas.ctx.beginPath();\n        this.optionShowUi(this.canvas.height / 8);\n        this.canvas.ctx.closePath();\n    };\n    return UiCanvas;\n}();\n\n\n(function() {\n    var mainCanvas = new (0, $01265813a9fb4b20$export$8d01c972ee8b14a9)();\n    var keyboard = new (0, $c02fb4bb949e3255$export$6a77e7ef76b918fb)();\n    var interactionMainScreen = new (0, $cc28301823d2abc3$exports.InteractionHandler)(mainCanvas, keyboard);\n    var uiCanvas = new (0, $c442a8e7c3e4bbe4$export$861f8d01d5f856c0)(mainCanvas, interactionMainScreen);\n    var obstacle = new (0, $cfef0b18c883f872$export$83b45c7b75260f83)(mainCanvas, interactionMainScreen);\n    var radarSystem = new (0, $25b56f938cdbb9cc$exports.Radar)(mainCanvas, obstacle);\n    var radarDisplay = new (0, $1069337799a59fae$exports.RadarScreen)(radarSystem);\n    var interactionRadarScreen = new (0, $cc28301823d2abc3$exports.InteractionHandler)(radarDisplay, keyboard);\n    var ui = new (0, $15f8127394952e2f$export$ce6abdcfcf17abde)(radarDisplay, interactionRadarScreen);\n    radarDisplay.setInteractionHandler(interactionRadarScreen);\n    interactionRadarScreen.setUi(ui);\n    interactionMainScreen.setUi(uiCanvas);\n    new (0, $6f888304d2ddb669$export$7e252627609de684)().render(function() {\n        mainCanvas.render();\n        obstacle.render();\n        uiCanvas.render();\n        radarSystem.render();\n        interactionRadarScreen.render();\n        interactionMainScreen.render();\n        radarDisplay.render();\n        ui.render();\n    });\n})();\n\n\n//# sourceMappingURL=radarV2.65bf1885.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"ghItd\\\",\\\"radarV2.65bf1885.js\\\",\\\"fUPKt\\\",\\\"helicopter_r1.d679ec66.png\\\",\\\"b4iWM\\\",\\\"helicopter_r2.3eb7d1f0.png\\\",\\\"9hF0h\\\",\\\"helicopter_r3.e9431d04.png\\\",\\\"7r8yT\\\",\\\"military-rotor-loop.987d95f8.wav\\\",\\\"eElcJ\\\",\\\"radar.ac49fdbd.png\\\",\\\"3HQQX\\\",\\\"radar-detected.2f54b526.wav\\\",\\\"hn9kt\\\",\\\"warShip.6c1fc1ef.png\\\"]\"));","import { InteractionHandler } from \"./InteractionHandler\";\nimport { KeyBoardHandler } from \"./KeyBoardHandler\";\nimport { Obstacle } from \"./obstacle/index\";\nimport { Performance } from \"./Performance\";\nimport { Radar } from \"./radar/index\";\nimport { RadarScreen } from \"./radarScreen/index\";\nimport { Canvas } from \"./scenario/index\";\nimport { Ui } from \"./Ui\";\nimport { UiCanvas } from \"./UiMainCanvas\";\n\n(function () {\n  const mainCanvas = new Canvas();\n  const keyboard = new KeyBoardHandler();\n\n  const interactionMainScreen = new InteractionHandler(mainCanvas, keyboard);\n  const uiCanvas = new UiCanvas(mainCanvas, interactionMainScreen);\n  const obstacle = new Obstacle(mainCanvas, interactionMainScreen);\n\n  const radarSystem = new Radar(mainCanvas, obstacle);\n  const radarDisplay = new RadarScreen(radarSystem);\n\n  const interactionRadarScreen = new InteractionHandler(radarDisplay, keyboard);\n  const ui = new Ui(radarDisplay, interactionRadarScreen);\n  radarDisplay.setInteractionHandler(interactionRadarScreen);\n  interactionRadarScreen.setUi(ui);\n  interactionMainScreen.setUi(uiCanvas);\n\n  new Performance().render(() => {\n    mainCanvas.render();\n    obstacle.render();\n    uiCanvas.render();\n    radarSystem.render();\n    interactionRadarScreen.render();\n    interactionMainScreen.render();\n    radarDisplay.render();\n    ui.render();\n  });\n})();\n","import { RadarScreen } from \"./radarScreen/index\";\nimport { KeyBoardHandler, keyboardStateType } from \"./KeyBoardHandler\";\nimport { Ui } from \"./Ui\";\nimport { Canvas } from \"./scenario/index\";\nimport { UiCanvas } from \"./UiMainCanvas\";\n\nexport class InteractionHandler {\n  canvas: RadarScreen | Canvas;\n  keyboardState: keyboardStateType;\n  keyBoardHandler: KeyBoardHandler;\n  ui: Ui | UiCanvas;\n  lastXClick: number;\n  lastYClick: number;\n\n  constructor(canvas: RadarScreen | Canvas, keyBoardHandler: KeyBoardHandler) {\n    this.canvas = canvas;\n    this.keyBoardHandler = keyBoardHandler;\n    this.keyboardState = keyBoardHandler.keyboardState;\n\n    this.lastXClick = 0;\n    this.lastYClick = 0;\n\n    this.canvas.element.addEventListener(\"touchstart\", (event) => this.handleTouchStart(event), false);\n    this.canvas.element.addEventListener(\"mousedown\", (event) => this.handleMouseDown(event), false);\n  }\n\n  handleTouchStart(event) {\n    this.getCanvasCoordinates(event);\n    console.log(`Touch started at x: ${this.lastXClick}, y: ${this.lastYClick}`);\n  }\n\n  handleMouseDown(event) {\n    this.getCanvasCoordinates(event);\n    console.log(`Mouse down at x: ${this.lastXClick}, y: ${this.lastYClick}`);\n  }\n\n  setUi(ui: Ui | UiCanvas) {\n    this.ui = ui;\n  }\n\n  resetClick() {\n    this.lastXClick = 0;\n    this.lastYClick = 0;\n  }\n\n  getCanvasCoordinates(event) {\n    const rect = this.canvas.element.getBoundingClientRect();\n    if (event.touches) {\n      this.lastXClick = event.touches[0].clientX - rect.left;\n      this.lastYClick = event.touches[0].clientY - rect.top;\n    } else {\n      this.lastXClick = event.clientX - rect.left;\n      this.lastYClick = event.clientY - rect.top;\n    }\n  }\n\n  hasCollision(keyName: keyof keyboardStateType): boolean {\n    const insideXPosition = this.lastXClick >= this.ui.positions[keyName].x && this.lastXClick <= this.ui.positions[keyName].x + this.ui.positions[keyName].width;\n    const insideYPosition = this.lastYClick >= this.ui.positions[keyName].y && this.lastYClick <= this.ui.positions[keyName].y + this.ui.positions[keyName].height;\n    return insideXPosition && insideYPosition;\n  }\n  render() {\n    let newKeyBoardState = { ...this.keyBoardHandler.keyboardState };\n\n    if (this.lastXClick && this.lastYClick) {\n      if (this.hasCollision(\"KeyQ\")) {\n        newKeyBoardState.KeyQ = true;\n      }\n\n      if (this.hasCollision(\"KeyE\")) {\n        newKeyBoardState.KeyE = true;\n      }\n\n      if (this.hasCollision(\"top\")) {\n        newKeyBoardState.top = true;\n      }\n\n      if (this.hasCollision(\"left\")) {\n        newKeyBoardState.left = true;\n      }\n\n      if (this.hasCollision(\"right\")) {\n        newKeyBoardState.right = true;\n      }\n\n      if (this.hasCollision(\"bottom\")) {\n        newKeyBoardState.bottom = true;\n      }\n    }\n\n    this.resetClick();\n\n    this.keyboardState = newKeyBoardState;\n  }\n}\n","export type keyboardStateType = {\n  top: boolean;\n  left: boolean;\n  bottom: boolean;\n  right: boolean;\n  KeyQ: boolean;\n  KeyE: boolean;\n};\n\nexport class KeyBoardHandler {\n  keyboardState: keyboardStateType;\n  constructor() {\n    this.keyboardState = {\n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n      KeyQ: false,\n      KeyE: false,\n    };\n\n    const moves = {\n      KeyW: (newValue) => {\n        this.keyboardState.top = newValue;\n      },\n      KeyS: (newValue) => {\n        this.keyboardState.bottom = newValue;\n      },\n      KeyA: (newValue) => {\n        this.keyboardState.left = newValue;\n      },\n      KeyD: (newValue) => {\n        this.keyboardState.right = newValue;\n      },\n\n      KeyQ: (newValue) => {\n        this.keyboardState.KeyQ = newValue;\n      },\n\n      KeyE: (newValue) => {\n        this.keyboardState.KeyE = newValue;\n      },\n    };\n\n    window.addEventListener(\"keydown\", (event) => {\n      moves[event.code]?.(true);\n    });\n\n    window.addEventListener(\"keyup\", (event) => {\n      moves[event.code]?.(false);\n    });\n  }\n}\n","import { Canvas } from \"../scenario/index\";\nimport { KeyBoardHandler } from \"../KeyBoardHandler\";\nimport helicopterR1 from \"./helicopter_r1.png\";\nimport helicopterR2 from \"./helicopter_r2.png\";\nimport helicopterR3 from \"./helicopter_r3.png\";\nimport { loadImageCanvas } from \"../utils\";\n\nconst ACCELERATION_FACTOR = 0.2;\nimport helicopter from \"../military-rotor-loop.wav\";\nimport { InteractionHandler } from \"../InteractionHandler\";\n\nexport class Obstacle {\n  canvas: Canvas;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  keyboard: InteractionHandler;\n  xSpeed: number;\n  ySpeed: number;\n\n  image1: HTMLImageElement;\n  image2: HTMLImageElement;\n  image3: HTMLImageElement;\n\n  audio: HTMLAudioElement;\n\n  currentImage: number;\n\n  constructor(canvas: Canvas, keyboardHandler: InteractionHandler) {\n    this.keyboard = keyboardHandler;\n    this.canvas = canvas;\n    this.x = 500;\n    this.y = 300;\n    this.width = 45;\n    this.height = 26;\n\n    this.xSpeed = 0;\n    this.ySpeed = 0;\n    this.currentImage = 0;\n\n    this.audio = new Audio();\n    this.audio.src = helicopter;\n    this.audio.volume = 0.5;\n    this.audio.loop = true;\n\n    this.canvas.element.addEventListener(\"click\", () => {\n      this.audio.play();\n    });\n\n    loadImageCanvas(helicopterR1, (imageLoaded) => {\n      this.image1 = imageLoaded;\n    });\n\n    loadImageCanvas(helicopterR2, (imageLoaded) => {\n      this.image2 = imageLoaded;\n    });\n\n    loadImageCanvas(helicopterR3, (imageLoaded) => {\n      this.image3 = imageLoaded;\n    });\n  }\n\n  updateSpeed() {\n    if (this.keyboard.keyboardState.top) {\n      this.ySpeed -= ACCELERATION_FACTOR;\n    }\n\n    if (this.keyboard.keyboardState.bottom) {\n      this.ySpeed += ACCELERATION_FACTOR;\n    }\n\n    if (this.keyboard.keyboardState.left) {\n      this.xSpeed -= ACCELERATION_FACTOR;\n    }\n\n    if (this.keyboard.keyboardState.right) {\n      this.xSpeed += ACCELERATION_FACTOR;\n    }\n  }\n\n  updateLocation() {\n    this.x += this.xSpeed;\n    this.y += this.ySpeed;\n  }\n\n  private drawObstacleInfo() {\n    this.canvas.ctx.beginPath();\n\n    this.canvas.ctx.fillStyle = \"#ffffff\";\n    this.canvas.ctx.font = \"16px Arial\";\n    this.canvas.ctx.textAlign = \"center\";\n\n    const floorX = Math.floor(this.x);\n    const floorY = Math.floor(this.y);\n    const fixedVelocityX = Number(this.xSpeed.toFixed(1));\n    const fixedVelocityY = Number(this.ySpeed.toFixed(1));\n\n    this.canvas.ctx.fillText(`xy=(${floorX}, ${floorY}) vxy=(${fixedVelocityX}, ${fixedVelocityY})`, this.x, this.y - 10);\n    this.canvas.ctx.closePath();\n  }\n\n  private drawImageObstacle() {\n    this.canvas.ctx.beginPath();\n\n    this.currentImage += 1;\n    if (this.currentImage >= 3) {\n      this.currentImage = 0;\n    }\n\n    if (this.image1 && this.image2 && this.image3) {\n      const currentImageMap = {\n        0: this.image1,\n        1: this.image2,\n        2: this.image3,\n      };\n\n      this.canvas.ctx.drawImage(currentImageMap[this.currentImage], this.x, this.y);\n    }\n\n    this.canvas.ctx.closePath();\n  }\n\n  drawObstacle() {\n    this.drawObstacleInfo();\n    this.drawImageObstacle();\n  }\n\n  render() {\n    this.updateSpeed();\n    this.updateLocation();\n    this.drawObstacle();\n  }\n}\n","module.exports = new __parcel__URL__(\"helicopter_r1.d679ec66.png\").toString();","module.exports = new __parcel__URL__(\"helicopter_r2.3eb7d1f0.png\").toString();","module.exports = new __parcel__URL__(\"helicopter_r3.e9431d04.png\").toString();","type BoxType = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nexport const isColliding = (box1: BoxType, box2: BoxType): boolean => {\n  const box2NotCollideRight = box2.x > box1.x + box1.width;\n  const box1NotColliedRight = box1.x > box2.x + box2.width;\n  const box2NotColliedBottom = box2.y > box1.y + box1.height;\n  const box1NotColliedBottom = box1.y > box2.y + box2.height;\n\n  return !(box2NotCollideRight || box1NotColliedRight || box2NotColliedBottom || box1NotColliedBottom);\n};\n\nexport const degreesToRadians = (degrees: number): number => {\n  return degrees * (Math.PI / 180);\n};\n\nexport function normalizeToClosest300(value: number): number {\n  return Math.round(value / 300) * 300;\n}\n\nexport const loadImageCanvas = (src: string, onLoad: (imageLoaded: HTMLImageElement) => void) => {\n  const image = new Image();\n  image.src = src;\n\n  image.onload = () => {\n    onLoad(image);\n  };\n};\n\nexport const renderAndRotateImage = (ctx: CanvasRenderingContext2D, image: HTMLImageElement, degrees: number, x: number, y: number, w: number, h: number) => {\n  ctx.beginPath();\n\n  ctx.save();\n  ctx.translate(x + w / 2, y + h / 2);\n  ctx.rotate((degrees * Math.PI) / 180.0);\n  ctx.translate(-x - w / 2, -y - h / 2);\n\n  ctx.drawImage(image, x, y, w, h);\n\n  ctx.restore();\n\n  ctx.closePath();\n};\n","module.exports = new __parcel__URL__(\"military-rotor-loop.987d95f8.wav\").toString();","const targetFrames = 60;\n\nexport class Performance {\n  render(callback: () => void) {\n    let lastTime = performance.now();\n    const frameDuration = 1000 / targetFrames;\n\n    const bootstrap = (currentTime: number) => {\n      const deltaTime = currentTime - lastTime;\n\n      if (deltaTime >= frameDuration) {\n        callback();\n\n        lastTime = currentTime;\n      }\n\n      requestAnimationFrame(bootstrap);\n    };\n\n    requestAnimationFrame(bootstrap);\n  }\n}\n","import { Canvas } from \"../scenario/index\";\nimport { Obstacle } from \"../obstacle/index\";\nimport { Pulse } from \"./Pulse\";\nimport { degreesToRadians, isColliding, loadImageCanvas, normalizeToClosest300, renderAndRotateImage } from \"../utils\";\nimport radarImageExternal from \"./radar.png\";\nimport { calculateTargetVelocity } from \"./math/calculateTargetVelocity\";\n\nconst MAX_FREQUENCY = 900000;\nconst SPEED_WAVE = 12345;\nconst FACTOR_UPDATE_NEW_FREQUENCY = 300;\n\ntype sendFrequencyMapType = {\n  timeLaunched: number;\n  degree: number;\n  xLaunch: number;\n  yLaunch: number;\n  timeReceived?: number;\n  frequencyReceived?: number;\n};\n\nexport type targetInformationType = {\n  timeReceived: number;\n  targetPosition: { x: number; y: number };\n  estimatedDistance: number;\n  radialSpeed: number;\n};\n\nexport class Radar {\n  private pulses: Pulse[] = [];\n  private currentDegree: number;\n  private canvas: Canvas;\n  private obstacle: Obstacle;\n  private x: number;\n  private y: number;\n  private width: number;\n  private height: number;\n  private frequency: number;\n\n  private databasePulses: { [frequency: number]: sendFrequencyMapType };\n\n  private radarImage: HTMLImageElement;\n\n  constructor(canvas: Canvas, obstacle: Obstacle) {\n    this.obstacle = obstacle;\n    this.canvas = canvas;\n\n    this.currentDegree = 0;\n    this.x = 100;\n    this.y = 300;\n    this.width = 20;\n    this.height = 20;\n    this.frequency = 0;\n    this.databasePulses = {};\n\n    loadImageCanvas(radarImageExternal, (loadedImage) => {\n      this.radarImage = loadedImage;\n    });\n  }\n\n  private calculatePositionXYTarget = (radarOriginX: number, radarOriginY: number, distanceFromRadarHypotenuse: number, angleInDegrees: number) => {\n    let angleInRadians = degreesToRadians(angleInDegrees);\n\n    let adjacentLeg = distanceFromRadarHypotenuse * Math.cos(angleInRadians);\n    let oppositeLeg = distanceFromRadarHypotenuse * Math.sin(angleInRadians);\n\n    let x = adjacentLeg;\n    let y = oppositeLeg;\n\n    return {\n      x,\n      y,\n    };\n  };\n\n  private handleReturnedPulses() {\n    this.pulses.forEach((pulse) => {\n      const pulseTouchedInRadar = isColliding(pulse, { x: this.x, y: this.y, width: this.width, height: this.height });\n\n      if (!pulse.isActive || pulse.isInInitialDirection || !pulseTouchedInRadar) {\n        return;\n      }\n\n      const realFrequency = normalizeToClosest300(pulse.frequency);\n      if (!this.databasePulses[realFrequency]) {\n        pulse.destroyPulse();\n        return;\n      }\n\n      this.databasePulses[realFrequency] = {\n        ...this.databasePulses[realFrequency],\n        timeReceived: new Date().getTime(),\n        frequencyReceived: pulse.frequency,\n      };\n\n      pulse.destroyPulse();\n    });\n  }\n\n  calculateDistanceByLaunchAndReceivedTime(pulse: sendFrequencyMapType) {\n    const deltaTime = pulse.timeReceived - pulse.timeLaunched;\n\n    return (deltaTime * 800) / 2817;\n  }\n\n  calculateTargetInformation(pulse: sendFrequencyMapType, frequencyLaunched: number): targetInformationType {\n    const estimatedDistance = this.calculateDistanceByLaunchAndReceivedTime(pulse);\n\n    const targetPosition = this.calculatePositionXYTarget(this.x, this.y, estimatedDistance, pulse.degree);\n    const radialSpeed = calculateTargetVelocity(pulse.frequencyReceived, frequencyLaunched, SPEED_WAVE);\n\n    return {\n      timeReceived: pulse.timeReceived,\n      targetPosition,\n      estimatedDistance,\n      radialSpeed,\n    };\n  }\n\n  getDetectTargets(): targetInformationType[] {\n    const targets: targetInformationType[] = [];\n    const frequenciesLaunched = Object.keys(this.databasePulses);\n\n    frequenciesLaunched.forEach((frequencyLaunched) => {\n      const pulse = this.databasePulses[frequencyLaunched] as sendFrequencyMapType;\n      if (!pulse.timeReceived) {\n        return;\n      }\n\n\n      targets.push(this.calculateTargetInformation(pulse, Number(frequencyLaunched)));\n    });\n\n    return targets;\n  }\n\n  private cleanup() {\n    this.pulses = this.pulses.filter((pulse) => pulse.isActive);\n  }\n\n  private renderPulses() {\n    this.pulses.forEach((pulse) => {\n      pulse.render();\n    });\n  }\n\n  updateFrequency() {\n    this.frequency += FACTOR_UPDATE_NEW_FREQUENCY;\n    if (this.frequency > MAX_FREQUENCY) {\n      this.frequency = 0;\n    }\n  }\n\n  updateDegree() {\n    this.currentDegree += 3;\n    if (this.currentDegree >= 360) {\n      this.currentDegree = 0;\n    }\n  }\n\n  drawRadarImage() {\n    if (this.radarImage) {\n      const x = this.x - 20;\n      const y = this.y - 20;\n      const width = this.width * 2;\n      const height = this.height * 2;\n\n      renderAndRotateImage(this.canvas.ctx, this.radarImage, this.currentDegree, x, y, width, height);\n    }\n  }\n\n  launchPulse() {\n    const angleInRadians = degreesToRadians(this.currentDegree);\n    const pulseSpeed = 20;\n\n    this.databasePulses[this.frequency] = {\n      timeLaunched: new Date().getTime(),\n      degree: this.currentDegree,\n      xLaunch: this.x,\n      yLaunch: this.y,\n      timeReceived: undefined,\n      frequencyReceived: undefined,\n    };\n\n    this.pulses.push(new Pulse(this.canvas, angleInRadians, pulseSpeed, this.x, this.y, this.frequency, this.obstacle, { x: this.x, y: this.y }));\n  }\n\n  render() {\n    this.updateFrequency();\n    this.updateDegree();\n    this.drawRadarImage();\n    this.launchPulse();\n    this.renderPulses();\n    this.cleanup();\n    this.handleReturnedPulses();\n  }\n}\n","import { Obstacle } from \"../obstacle/index\";\nimport { Canvas } from \"../scenario/index\";\nimport { isColliding } from \"../utils\";\nimport { PulseColor } from \"./PulseColor\";\nimport { calculateNewFrequency } from \"./math/calculateNewFrequency\";\nimport { calculateRadialVelocity } from \"./math/calculateRadialVelocity\";\n\nconst MAX_LIFE_RENDER = 600;\nconst SPEED_WAVE = 12345;\nconst FACTOR_RESIZE_PULSE = 2;\n\ntype startPositionLaunch = {\n  x: number;\n  y: number;\n};\n\nexport class Pulse {\n  private speedX: number;\n  private speedY: number;\n  private lifeRender: number;\n  private color: PulseColor;\n  private canvas: Canvas;\n  private obstacle: Obstacle;\n  private startPositionLaunch: startPositionLaunch;\n\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  isActive: boolean;\n  isInInitialDirection: boolean;\n  frequency: number;\n\n  constructor(canvas: Canvas, angle: number, speed: number, x: number, y: number, frequency: number, obstacle: Obstacle, startPositionLaunch: startPositionLaunch) {\n    this.x = x;\n    this.y = y;\n    this.width = 2;\n    this.height = 2;\n    this.lifeRender = 0;\n    this.isInInitialDirection = true;\n    this.canvas = canvas;\n    this.obstacle = obstacle;\n    this.frequency = frequency;\n    this.isActive = true;\n    this.speedX = Math.cos(angle) * speed;\n    this.speedY = Math.sin(angle) * speed;\n    this.startPositionLaunch = startPositionLaunch;\n\n    this.color = new PulseColor();\n\n    this.color.generateRgbByFrequency(frequency);\n  }\n\n  destroyPulse() {\n    this.isActive = false;\n  }\n\n  applyBlueShift(newFrequency: number) {\n    this.color.applyBlueShift(newFrequency);\n  }\n\n  applyRedShift(newFrequency: number) {\n    this.color.applyRedShift(newFrequency);\n  }\n\n  updateLocation() {\n    this.x += this.speedX;\n    this.y += this.speedY;\n  }\n\n  updateScale() {\n    if (this.isInInitialDirection) {\n      this.width += FACTOR_RESIZE_PULSE;\n      this.height += FACTOR_RESIZE_PULSE;\n    } else if (this.width >= 0) {\n      this.width -= FACTOR_RESIZE_PULSE;\n      this.height -= FACTOR_RESIZE_PULSE;\n    } else {\n      this.destroyPulse();\n    }\n  }\n\n  drawPulse() {\n    this.canvas.ctx.beginPath();\n    this.canvas.ctx.fillStyle = this.color.toRgb();\n    this.canvas.ctx.fillRect(this.x, this.y, this.width, this.height);\n    this.canvas.ctx.closePath();\n  }\n\n  handleLifeRender() {\n    this.lifeRender += 1;\n\n    if (this.lifeRender >= MAX_LIFE_RENDER) {\n      this.destroyPulse();\n    }\n  }\n\n  invertDirection() {\n    this.speedX = this.speedX * -1;\n    this.speedY = this.speedY * -1;\n    this.isInInitialDirection = false;\n  }\n\n  handleCollisionWithObstacle() {\n    const collisionWithObstacle = isColliding(this, this.obstacle);\n\n    if (this.isInInitialDirection === false || collisionWithObstacle === false) {\n      return;\n    }\n\n    const radialVelocity = calculateRadialVelocity(this.startPositionLaunch, this.obstacle, {\n      x: this.obstacle.xSpeed,\n      y: this.obstacle.ySpeed,\n    });\n\n    const newFrequency = calculateNewFrequency(radialVelocity, this.frequency, SPEED_WAVE);\n\n    if (newFrequency > this.frequency) {\n      this.applyBlueShift(newFrequency);\n    }\n\n    if (newFrequency < this.frequency) {\n      this.applyRedShift(newFrequency);\n    }\n\n    this.invertDirection();\n    this.frequency = newFrequency;\n  }\n\n  render() {\n    if (!this.isActive) return;\n\n    this.updateLocation();\n    this.updateScale();\n    this.drawPulse();\n    this.handleLifeRender();\n\n    this.handleCollisionWithObstacle();\n  }\n}\n","export class PulseColor {\n  r: number;\n  g: number;\n  b: number;\n\n  constructor() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n  }\n\n  toRgb(): string {\n    return `rgb(${Math.floor(this.r)}, ${Math.floor(this.g)}, ${Math.floor(this.b)})`;\n  }\n\n  getColorByFactorFrequency(frequency: number): number {\n    const minFrequency = 0;\n    const maxFrequency = 100000;\n\n    const minColor = 80;\n    const maxColor = 120;\n\n    if (frequency < minFrequency) {\n      frequency = minFrequency;\n    }\n\n    if (frequency > maxFrequency) {\n      frequency = maxFrequency;\n    }\n\n    return ((frequency - minFrequency) / (maxFrequency - minFrequency)) * (maxColor - minColor) + minColor;\n  }\n\n  generateRgbByFrequency(frequency: number): void {\n    const color = this.getColorByFactorFrequency(frequency);\n\n    this.r = color;\n    this.g = color;\n    this.b = color;\n  }\n\n  applyBlueShift(frequencyDiff: number): void {\n    this.b += frequencyDiff / 300;\n  }\n\n  applyRedShift(frequencyDiff: number): void {\n    this.r += frequencyDiff / 300;\n  }\n}\n","export const calculateNewFrequency = (targetVelocity: number, baseFrequency: number, speedWave: number): number => {\n  return baseFrequency * (speedWave / (speedWave + targetVelocity));\n};\n","type positionItems = {\n  x: number;\n  y: number;\n};\n\nexport const calculateRadialVelocity = (radarPosition: positionItems, objectPosition: positionItems, objectVelocity: positionItems): number => {\n  const directionalVectorX = objectPosition.x - radarPosition.x;\n  const directionVectorY = objectPosition.y - radarPosition.y;\n\n  const magnitude = Math.sqrt(directionalVectorX ** 2 + directionVectorY ** 2);\n\n  const normalizedDirectionalVectorX = directionalVectorX / magnitude;\n  const normalizedDirectionVectorY = directionVectorY / magnitude;\n\n  return objectVelocity.x * normalizedDirectionalVectorX + objectVelocity.y * normalizedDirectionVectorY;\n};\n","module.exports = new __parcel__URL__(\"radar.ac49fdbd.png\").toString();","export const calculateTargetVelocity = (observedFrequency: number, baseFrequency: number, speedWave: number): number => {\n  const frequencyChange = observedFrequency - baseFrequency;\n  return (frequencyChange * speedWave) / (baseFrequency + frequencyChange);\n};\n","import { InteractionHandler } from \"../InteractionHandler\";\nimport { Radar, targetInformationType } from \"../radar/index\";\nimport { isColliding } from \"../utils\";\n\nconst MAX_RADAR_SCALE = 128;\nconst TIME_IN_MS_TO_IGNORE_KEYBOARD_ACTION = 200;\n\nconst MAX_TIME_TO_IGNORE_DETECTIONS = 12000;\nimport audioDetection from \"../radar-detected.wav\";\n\nexport class RadarScreen {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n\n  element: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  radar: Radar;\n\n  scale: number;\n\n  interactionHandler: InteractionHandler;\n  isInPreventMode: boolean;\n  audio: HTMLAudioElement;\n\n  timeToReset: number;\n\n  constructor(radar: Radar) {\n    this.radar = radar;\n\n    this.scale = 4;\n\n    this.element = document.getElementById(\"canvas2\") as HTMLCanvasElement;\n    this.ctx = this.element.getContext(\"2d\") as CanvasRenderingContext2D;\n    this.isInPreventMode = false;\n    this.x = 0;\n    this.y = 0;\n    this.width = 500;\n    this.height = 500;\n\n    this.timeToReset = 4000;\n\n    this.audio = new Audio();\n    this.audio.src = audioDetection;\n    this.audio.volume = 0.5;\n  }\n\n  setInteractionHandler(interactionHandler: InteractionHandler) {\n    this.interactionHandler = interactionHandler;\n  }\n\n  changeScale() {\n    this.scale = this.scale * 2;\n    if (this.scale > MAX_RADAR_SCALE) {\n      this.scale = 1;\n    }\n  }\n\n  drawRadarCircle() {\n    const startDegree = 0;\n    const endDegree = 2 * Math.PI;\n\n    const x = this.width / 2;\n    const y = this.height / 2;\n\n    const factorEachArc = 50;\n    const radius = x;\n\n    const arcs = [0, 1, 2, 3, 4];\n\n    arcs.forEach((arc) => {\n      this.ctx.beginPath();\n      this.ctx.strokeStyle = \"#44de3c\";\n      this.ctx.lineWidth = 1;\n      this.ctx.arc(x, y, Math.floor(radius - factorEachArc * arc), startDegree, endDegree);\n      this.ctx.closePath();\n      this.ctx.stroke();\n    });\n  }\n\n  getDetections() {\n    return this.radar.getDetectTargets();\n  }\n\n  normalizeWithOnRadarCenter(x: number, y: number): { x: number; y: number } {\n    return {\n      x: x / this.scale + this.width / 2,\n      y: y / this.scale + this.height / 2,\n    };\n  }\n\n  removeNormalizationRadarCenter(x: number, y: number): { x: number; y: number } {\n    return {\n      x: x / this.scale - this.width / 2,\n      y: y / this.scale - this.height / 2,\n    };\n  }\n\n  isOutsideClusterZone(detection: targetInformationType, lastDetection: targetInformationType[\"targetPosition\"]) {\n    return !isColliding(\n      {\n        x: detection.targetPosition.x,\n        y: detection.targetPosition.y,\n        width: 20,\n        height: 20,\n      },\n      {\n        x: lastDetection.x,\n        y: lastDetection.y,\n        width: 20,\n        height: 20,\n      }\n    );\n  }\n\n  drawInformationCluster(detection: targetInformationType) {\n    this.ctx.fillStyle = \"#44de3c\";\n    this.ctx.font = \"bold 16px Verdana\";\n    this.ctx.textAlign = \"center\";\n\n    const sizesUnNormalized = this.removeNormalizationRadarCenter(detection.targetPosition.x, detection.targetPosition.y);\n\n    const targetXFloor = Math.floor(sizesUnNormalized.x);\n    const targetYFloor = Math.floor(sizesUnNormalized.y);\n\n    const radialSpeedTargetFixed = Number(detection.radialSpeed.toFixed(2)) || 0;\n\n    const x = Math.floor(detection.targetPosition.x);\n    const y = Math.floor(detection.targetPosition.y);\n\n    const estimatedDistanceFloor = Math.floor(detection.estimatedDistance);\n\n    const yNormalized = y > 0 ? y - 10 : y + 10;\n    this.ctx.fillText(`xy(${targetXFloor}, ${targetYFloor}) rv=${radialSpeedTargetFixed} d=${estimatedDistanceFloor}`, x, yNormalized);\n  }\n\n  drawClusterItem(detection: targetInformationType) {\n    this.ctx.fillStyle = \"#44de3c\";\n    this.ctx.fillRect(detection.targetPosition.x, detection.targetPosition.y, 10, 10);\n  }\n\n  drawDetections(detections: targetInformationType[]) {\n    this.ctx.beginPath();\n\n    let lastDetection = {\n      x: 0,\n      y: 0,\n    };\n\n    detections.forEach((detectionToIgnore) => {\n      const targetNormalized = this.normalizeWithOnRadarCenter(detectionToIgnore.targetPosition.x, detectionToIgnore.targetPosition.y);\n      const detectionNormalized: targetInformationType = { ...detectionToIgnore, targetPosition: targetNormalized };\n\n      const detectionIsVeryOld = new Date().getTime() - detectionNormalized.timeReceived > this.timeToReset;\n      if (detectionIsVeryOld) {\n        return;\n      }\n\n      if (this.isOutsideClusterZone(detectionNormalized, lastDetection)) {\n        this.drawInformationCluster(detectionNormalized);\n        this.audio.play();\n        lastDetection = {\n          x: detectionNormalized.targetPosition.x,\n          y: detectionNormalized.targetPosition.y,\n        };\n      }\n\n      this.drawClusterItem(detectionNormalized);\n    });\n\n    this.ctx.closePath();\n  }\n\n  changeResetTime() {\n    this.timeToReset += 1000;\n    if (this.timeToReset > MAX_TIME_TO_IGNORE_DETECTIONS) {\n      this.timeToReset = 2000;\n    }\n  }\n  render() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    if (this.interactionHandler.keyboardState.KeyQ && !this.isInPreventMode) {\n      this.isInPreventMode = true;\n\n      this.changeResetTime();\n\n      setTimeout(() => {\n        this.isInPreventMode = false;\n      }, TIME_IN_MS_TO_IGNORE_KEYBOARD_ACTION);\n    }\n\n    if (this.interactionHandler.keyboardState.KeyE && !this.isInPreventMode) {\n      this.isInPreventMode = true;\n\n      this.changeScale();\n\n      setTimeout(() => {\n        this.isInPreventMode = false;\n      }, TIME_IN_MS_TO_IGNORE_KEYBOARD_ACTION);\n    }\n\n    this.drawRadarCircle();\n    this.drawDetections(this.getDetections());\n    this.ctx.closePath();\n  }\n}\n","module.exports = new __parcel__URL__(\"radar-detected.2f54b526.wav\").toString();","import { loadImageCanvas } from \"../utils\";\nimport warShipImage from \"./warShip.png\";\n\nexport class Canvas {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n\n  element: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  warShip: HTMLImageElement;\n\n  constructor() {\n    this.element = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    this.ctx = this.element.getContext(\"2d\") as CanvasRenderingContext2D;\n\n    this.x = 0;\n    this.y = 0;\n    this.width = 1000;\n    this.height = 500;\n\n    loadImageCanvas(warShipImage, (loadedImage) => {\n      this.warShip = loadedImage;\n    });\n  }\n\n  drawOcean() {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = \"#4baff2\";\n    this.ctx.fillRect(0, 0, this.width, this.height);\n    this.ctx.closePath();\n  }\n\n  drawWarShip() {\n    if (!this.warShip) {\n      return;\n    }\n    this.ctx.beginPath();\n    this.ctx.drawImage(this.warShip, -2, 248, 120, 120);\n    this.ctx.closePath();\n  }\n\n  render() {\n    this.ctx.clearRect(this.x, this.y, this.width, this.height);\n\n    this.drawOcean();\n    this.drawWarShip();\n  }\n}\n","module.exports = new __parcel__URL__(\"warShip.6c1fc1ef.png\").toString();","import { InteractionHandler } from \"./InteractionHandler\";\nimport { keyboardStateType } from \"./KeyBoardHandler\";\nimport { RadarScreen } from \"./radarScreen/index\";\n\ntype partialKeys = keyof keyboardStateType;\n\nexport class Ui {\n  radarScreen: RadarScreen;\n  keyboardState: InteractionHandler;\n  preventMultiplesActions: boolean;\n  positions: {\n    [key in Partial<partialKeys>]?: {\n      x: number;\n      y: number;\n      height: number;\n      width: number;\n    };\n  };\n\n  constructor(radarScreen: RadarScreen, keyboardState: InteractionHandler) {\n    this.radarScreen = radarScreen;\n    this.keyboardState = keyboardState;\n\n    this.preventMultiplesActions = false;\n    this.positions = {};\n  }\n\n  renderButton({ text, x, y, xText, yText, isActive }: { text: string; x: number; y: number; xText: number; yText: number; isActive: boolean }) {\n    if (isActive) {\n      this.radarScreen.ctx.fillStyle = \"#44de3c\";\n      this.radarScreen.ctx.fillRect(x, y, 40, 40);\n    } else {\n      this.radarScreen.ctx.strokeStyle = \"#44de3c\";\n      this.radarScreen.ctx.lineWidth = 3;\n      this.radarScreen.ctx.rect(x, y, 40, 40);\n      this.radarScreen.ctx.stroke();\n    }\n\n    this.radarScreen.ctx.fillStyle = isActive ? \"#000000\" : \"#44de3c\";\n    this.radarScreen.ctx.font = \"bold 18px Verdana\";\n    this.radarScreen.ctx.textAlign = \"center\";\n    this.radarScreen.ctx.fillText(text, xText, yText);\n  }\n\n  optionShowUi(height: number) {\n    const x = this.radarScreen.width - 50;\n    const y = height - 50;\n\n    this.positions.KeyQ = {\n      x: 10,\n      y,\n      height: 40,\n      width: 40,\n    };\n\n    this.renderButton({\n      text: `${this.radarScreen.timeToReset / 1000}s`,\n      isActive: false,\n      x: 10,\n      y: y,\n      xText: 30,\n      yText: height - 23,\n    });\n\n    this.positions.KeyE = {\n      x,\n      y,\n      height: 40,\n      width: 40,\n    };\n\n    this.renderButton({\n      text: `${this.radarScreen.scale}x`,\n      isActive: false,\n      x: x,\n      y: y,\n      xText: this.radarScreen.width - 30,\n      yText: height - 23,\n    });\n  }\n\n  render() {\n    this.radarScreen.ctx.beginPath();\n    this.optionShowUi(this.radarScreen.height / 8);\n    this.radarScreen.ctx.closePath();\n  }\n}\n","import { InteractionHandler } from \"./InteractionHandler\";\nimport { keyboardStateType } from \"./KeyBoardHandler\";\nimport { Canvas } from \"./scenario/index\";\n\ntype partialKeys = keyof keyboardStateType;\n\nexport class UiCanvas {\n  canvas: Canvas;\n  keyboardState: InteractionHandler;\n  preventMultiplesActions: boolean;\n  positions: {\n    [key in Partial<partialKeys>]?: {\n      x: number;\n      y: number;\n      height: number;\n      width: number;\n    };\n  };\n\n  constructor(canvas: Canvas, keyboardState: InteractionHandler) {\n    this.canvas = canvas;\n    this.keyboardState = keyboardState;\n\n    this.preventMultiplesActions = false;\n    this.positions = {};\n  }\n\n  renderButton({ text, x, y, xText, yText, isActive }: { text: string; x: number; y: number; xText: number; yText: number; isActive: boolean }) {\n    if (isActive) {\n      this.canvas.ctx.fillStyle = \"#ffffff\";\n      this.canvas.ctx.fillRect(x, y, 40, 40);\n    } else {\n      this.canvas.ctx.strokeStyle = \"#ffffff\";\n      this.canvas.ctx.lineWidth = 3;\n      this.canvas.ctx.rect(x, y, 40, 40);\n      this.canvas.ctx.stroke();\n    }\n\n    this.canvas.ctx.fillStyle = isActive ? \"#000000\" : \"#ffffff\";\n    this.canvas.ctx.font = \"bold 18px Verdana\";\n    this.canvas.ctx.textAlign = \"center\";\n    this.canvas.ctx.fillText(text, xText, yText);\n  }\n\n  optionShowUi(height: number) {\n    const x = this.canvas.width - 50;\n    const y = height - 50;\n\n    this.positions.top = {\n      x: x - 50,\n      y,\n      height: 40,\n      width: 40,\n    };\n\n    this.renderButton({\n      text: `w`,\n      isActive: false,\n      x: this.positions.top.x,\n      y: this.positions.top.y,\n      xText: this.canvas.width - 30 - 50,\n      yText: height - 23,\n    });\n\n    this.positions.bottom = {\n      x: x - 50,\n      y: y + 50,\n      height: 40,\n      width: 40,\n    };\n\n    this.renderButton({\n      text: `s`,\n      isActive: false,\n      x: this.positions.bottom.x,\n      y: this.positions.bottom.y,\n      xText: this.canvas.width - 30 - 50, // FIX THIS FILE\n      yText: height - 23 + 50,\n    });\n\n    this.positions.left = {\n      x: x - 100,\n      y: y + 50,\n      height: 40,\n      width: 40,\n    };\n\n    this.renderButton({\n      text: `a`,\n      isActive: false,\n      x: this.positions.left.x,\n      y: this.positions.left.y,\n      xText: this.canvas.width - 30 - 100,\n      yText: height - 23 + 50,\n    });\n\n    this.positions.right = {\n      x,\n      y: y + 50,\n      height: 40,\n      width: 40,\n    };\n\n    this.renderButton({\n      text: `d`,\n      isActive: false,\n      x: this.positions.right.x,\n      y: this.positions.right.y,\n      xText: this.canvas.width - 30,\n      yText: height - 23 + 50,\n    });\n  }\n\n  render() {\n    this.canvas.ctx.beginPath();\n    this.optionShowUi(this.canvas.height / 8);\n    this.canvas.ctx.closePath();\n  }\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","mainCanvas","keyboard","interactionMainScreen","uiCanvas","obstacle","radarSystem","radarDisplay","interactionRadarScreen","ui","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$cc28301823d2abc3$exports","$cc28301823d2abc3$export$a30cd982b4e89bdb","$cc28301823d2abc3$var$__assign","assign","t","arguments","p","prototype","hasOwnProperty","apply","InteractionHandler","canvas","keyBoardHandler","_this","keyboardState","lastXClick","lastYClick","element","addEventListener","event","handleTouchStart","handleMouseDown","getCanvasCoordinates","console","log","concat","setUi","resetClick","rect","getBoundingClientRect","touches","clientX","left","clientY","top","hasCollision","keyName","insideXPosition","positions","x","width","insideYPosition","y","height","render","newKeyBoardState","KeyQ","KeyE","right","bottom","$71f3d169b73e120f$exports","$c29c06058067e98c$exports","$1bcc20570dc2f2c4$exports","$a1c69b46dd95ec89$export$5efe44c485c74673","box1","box2","box2NotCollideRight","box1NotColliedRight","box2NotColliedBottom","box1NotColliedBottom","$a1c69b46dd95ec89$export$c9fcf1a7df975d78","degrees","Math","PI","$a1c69b46dd95ec89$export$5a06ce4246e5c5af","src","onLoad","image","Image","onload","$a1c69b46dd95ec89$export$af40482953bd6c4a","ctx","w","h","beginPath","save","translate","rotate","drawImage","restore","closePath","$386a4adc1c893683$exports","$cfef0b18c883f872$export$83b45c7b75260f83","Obstacle","keyboardHandler","xSpeed","ySpeed","currentImage","audio","Audio","volume","loop","play","imageLoaded","image1","image2","image3","updateSpeed","updateLocation","drawObstacleInfo","fillStyle","font","textAlign","floorX","floor","floorY","fixedVelocityX","Number","toFixed","fixedVelocityY","fillText","drawImageObstacle","currentImageMap","drawObstacle","$6f888304d2ddb669$export$7e252627609de684","Performance","callback","lastTime","performance","now","bootstrap","currentTime","requestAnimationFrame","$25b56f938cdbb9cc$exports","$25b56f938cdbb9cc$export$bace472c466fdd25","$b9193c185532af84$export$8d01df666ca94528","PulseColor","r","g","b","toRgb","getColorByFactorFrequency","frequency","maxFrequency","maxColor","generateRgbByFrequency","color","applyBlueShift","frequencyDiff","applyRedShift","$eb4eeb43815ff4ff$export$7f8704557ed79bfe","radarPosition","objectPosition","objectVelocity","directionalVectorX","directionVectorY","magnitude","sqrt","pow","$762428b391db5da1$export$927d63e2511364c0","Pulse","angle","speed","startPositionLaunch","lifeRender","isInInitialDirection","isActive","speedX","cos","speedY","sin","destroyPulse","newFrequency","updateScale","drawPulse","fillRect","handleLifeRender","invertDirection","handleCollisionWithObstacle","collisionWithObstacle","targetVelocity","baseFrequency","speedWave","$83ea8cc0ff3f036f$exports","$4dac877b74b4076a$export$539f0399746e9c38","observedFrequency","frequencyChange","$25b56f938cdbb9cc$var$__assign","Radar","pulses","calculatePositionXYTarget","radarOriginX","radarOriginY","distanceFromRadarHypotenuse","angleInDegrees","angleInRadians","currentDegree","databasePulses","loadedImage","radarImage","handleReturnedPulses","forEach","pulse","pulseTouchedInRadar","realFrequency","round","value","timeReceived","Date","getTime","frequencyReceived","calculateDistanceByLaunchAndReceivedTime","deltaTime","timeLaunched","calculateTargetInformation","frequencyLaunched","estimatedDistance","targetPosition","degree","radialSpeed","getDetectTargets","targets","frequenciesLaunched","keys","push","cleanup","filter","renderPulses","updateFrequency","updateDegree","drawRadarImage","launchPulse","xLaunch","yLaunch","undefined","$1069337799a59fae$exports","$1069337799a59fae$export$8b99deabfaab0abf","$842cbe6a75946193$exports","$1069337799a59fae$var$__assign","RadarScreen","radar","scale","document","getElementById","getContext","isInPreventMode","timeToReset","setInteractionHandler","interactionHandler","changeScale","drawRadarCircle","endDegree","arcs","arc","strokeStyle","lineWidth","radius","factorEachArc","stroke","getDetections","normalizeWithOnRadarCenter","removeNormalizationRadarCenter","isOutsideClusterZone","detection","lastDetection","drawInformationCluster","sizesUnNormalized","targetXFloor","targetYFloor","radialSpeedTargetFixed","estimatedDistanceFloor","drawClusterItem","drawDetections","detections","detectionToIgnore","targetNormalized","detectionNormalized","changeResetTime","clearRect","setTimeout","$8c858ee291bf929d$exports","$01265813a9fb4b20$export$8d01c972ee8b14a9","Canvas","warShip","drawOcean","drawWarShip","$15f8127394952e2f$export$ce6abdcfcf17abde","Ui","radarScreen","preventMultiplesActions","renderButton","_a","text","xText","yText","optionShowUi","$c442a8e7c3e4bbe4$export$861f8d01d5f856c0","UiCanvas","moves","KeyW","newValue","KeyS","KeyA","KeyD","window"],"version":3,"file":"radarV2.65bf1885.js.map"}